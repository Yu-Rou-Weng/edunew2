{
  "timestamp": "2024-07-02T13:28:23.107Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship can be expressed as:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom which we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and the period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.",
  "output": "from vpython import *\nimport numpy as np\n\n# Constants\ng = 9.8\ntheta_0 = np.pi / 20\nLength_I = 10\nRadius_I = 1\n\n# Ideal Pendulum\nball = sphere(pos=vector(Length_I * np.sin(theta_0), -Length_I * np.cos(theta_0), 0), radius=Radius_I, color=color.red)\nrod = cylinder(pos=vector(0, 0, 0), axis=ball.pos, radius=0.01)\nomega = np.sqrt(g / Length_I)\nT = 2 * np.pi / omega\nt = 0\ndt = 0.01\n\n# Animate the motion\nwhile True:\n    rate(100)\n    theta = theta_0 * np.cos(omega * t)\n    ball.pos = vector(Length_I * np.sin(theta), -Length_I * np.cos(theta), 0)\n    rod.axis = ball.pos\n    t += dt\n\n# Pendulum with Air Resistance\nball2 = sphere(pos=vector(Length_I * np.sin(theta_0), -Length_I * np.cos(theta_0), 0), radius=Radius_I, color=color.blue, make_trail=True)\nrod2 = cylinder(pos=vector(0, 0, 0), axis=ball2.pos, radius=0.01)\ntheta2 = theta_0\nomega2 = 0\nt = 0\ndt = 0.01\nair_resistance = 0.1\n\n# Animate the motion\nwhile True:\n    rate(100)\n    alpha = -(g / Length_I) * np.sin(theta2) - air_resistance * omega2\n    omega2 += alpha * dt\n    theta2 += omega2 * dt\n    ball2.pos = vector(Length_I * np.sin(theta2), -Length_I * np.cos(theta2), 0)\n    rod2.axis = ball2.pos\n    t += dt"
}