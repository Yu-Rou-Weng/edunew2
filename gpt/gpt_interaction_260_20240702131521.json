{
  "timestamp": "2024-07-02T13:15:21.778Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nBecause the direction of the torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship can be expressed as:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and the period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.",
  "output": "from vpython import *\nimport numpy as np\n\n# Cyber input\nLength_I = 10\nRadius_I = 1\n\n# Constants\ng = 9.8\nangle = 5*np.pi/180\ndt = 0.001\nt = 0\n\n# Scene\nscene = canvas(title=\"Simple Pendulum\")\nscene.background = vector(0.5, 0.6, 0.5)\n\n# Objects\nceiling = box(pos=vector(0,0,0), length=0.2, height=0.01, width=0.2, color=color.blue)\nball = sphere(pos=vector(Length_I*np.sin(angle), -Length_I*np.cos(angle), 0), radius=Radius_I, color=color.red, make_trail=True)\nball.mass = 1\nstring = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01, color=color.gray(0.7))\n\n# Motion\nwhile True:\n    rate(1000)\n    alpha = -g/Length_I*ball.pos.y\n    ball.pos = ball.pos + alpha*vector(-np.sin(angle),np.cos(angle),0)*dt\n    string.axis = ball.pos\n    t = t + dt"
}