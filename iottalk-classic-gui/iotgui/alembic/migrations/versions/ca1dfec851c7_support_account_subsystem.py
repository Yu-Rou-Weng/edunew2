"""Support Account Subsystem

Revision ID: ca1dfec851c7
Revises: 2017eaf51b5c
Create Date: 2021-10-26 15:38:26.547701

"""
from alembic import op
import sqlalchemy as sa

import datetime
import pytz

from iotgui.alembic.migrations.utils import sqlite_alter_columns

# revision identifiers, used by Alembic.
revision = 'ca1dfec851c7'
down_revision = '2017eaf51b5c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'RefreshToken',
        sa.Column('created_at',
                  sa.DateTime(timezone=True),
                  server_default=sa.text('CURRENT_TIMESTAMP'),
                  nullable=True,
                  default=lambda: datetime.datetime.now(pytz.UTC)),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('token', sa.Text(), nullable=True),
        sa.Column('u_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['u_id'], ['User.u_id'], ),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True
    )
    op.create_table(
        'AccessToken',
        sa.Column('created_at',
                  sa.DateTime(timezone=True),
                  server_default=sa.text('CURRENT_TIMESTAMP'),
                  nullable=True,
                  default=lambda: datetime.datetime.now(pytz.UTC)),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('token', sa.Text(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('u_id', sa.Integer(), nullable=True),
        sa.Column('refresh_token_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['refresh_token_id'], ['RefreshToken.id'], ),
        sa.ForeignKeyConstraint(['u_id'], ['User.u_id'], ),
        sa.PrimaryKeyConstraint('id'),
        sqlite_autoincrement=True
    )
    op.add_column(
        'User',
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column(
        'User',
        sa.Column('email', sa.String(length=255), server_default='', nullable=False))
    op.add_column(
        'User',
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))

    bind = op.get_bind()
    if bind.engine.name == 'mysql':
        op.add_column(
            'User',
            sa.Column('sub',
                      sa.String(length=255),
                      unique=True,
                      server_default='',
                      nullable=True))
    else:
        op.add_column(
            'User',
            sa.Column('sub',
                      sa.String(length=255),
                      unique=False,
                      server_default='',
                      nullable=True))
        sqlite_alter_columns(
            'User',
            [sa.Column('sub',
                       sa.String(length=255),
                       unique=True,
                       server_default='',
                       nullable=True)])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('User', 'updated_at')
    op.drop_column('User', 'email')
    op.drop_column('User', 'sub')
    op.drop_column('User', 'created_at')
    op.drop_table('AccessToken')
    op.drop_table('RefreshToken')
    # ### end Alembic commands ###
