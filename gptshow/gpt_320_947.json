{
  "session_id": 947,
  "log": [
    {
      "input": "Screen Settings:\nSet the canvas width to 700 and height to 400. Do not change the canvas size.\n\nObject Motion & Parameter Settings:\nPlease create a VPython pendulum animation: Suspend a small ball from the ceiling with a string, with the angle between the string and the vertical line (pendulum angle) set to 10 degrees. The ball is released from rest and swings back and forth under the influence of gravity.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 0. This variable represents the angular velocity of the pendulum bob.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, the angular velocity of the pendulum bob should be immediately updated to the new value of Speed_I.\n\n(3) Define and initialize a Cyber Input Variable named Gravity_I with an initial value set to 9.8. This variable represents the gravitational acceleration of the pendulum.\n\n(4) During the animation, whenever the value of the Gravity_I variable changes, the gravitational acceleration of the pendulum should be immediately updated to the new value of Gravity_I.\n(5) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# create cyber input variables\nSpeed_I = 0\nGravity_I = 9.8\n\n# create the canvas\nscene = canvas(width=700, height=400)\n\n# create the pendulum\npendulum = sphere(pos=vector(0, -0.1, 0), radius=0.05, color=color.red)\nceiling = box(pos=vector(0, 0, 0), size=vector(0.2, 0.01, 0.2), color=color.blue)\nstring = cylinder(pos=ceiling.pos, axis=pendulum.pos - ceiling.pos, radius=0.01)\n\n# set the initial conditions\nangle = 10 * pi / 180  # convert to radians\npendulum.pos = vector(0.1 * sin(angle), -0.1 * cos(angle), 0)\nSpeed_I = 0\n\n# animation loop\ndt = 0.01\nwhile True:\n    rate(100)\n    angle += Speed_I * dt\n    Speed_I -= Gravity_I * sin(angle) * dt\n    pendulum.pos = vector(0.1 * sin(angle), -0.1 * cos(angle), 0)\n    string.axis = pendulum.pos - ceiling.pos",
      "mode": "initial",
      "timestamp": "2024-08-19 13:47:17",
      "serial_number": 1
    }
  ]
}