{
  "session_id": 883,
  "log": [
    {
      "input": "Simple Pendulum with Air Resistance\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom which we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, so the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nProgram to be written:\nConsider a simple pendulum with air resistance.\n\nProgramming Part\nThe program for a simple pendulum with air resistance is very similar to that of a regular pendulum, with differences in:\n\nLine 18, add a new variable b = 0.1.\n\nLine 58, when calculating the net force on the ball, include air resistance\n\nF = vec(0, -m*g, 0) - b * ball.v\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Constants\ng = 9.8\nm = 1.0\nLength_I = 10\n\n# Coefficients\nb = 0.1\nangle = radians(30)\n\n# Create objects\nceiling = box(pos=vector(0, 0, 0), length=0.2, height=0.02, width=0.2, color=color.green)\nball = sphere(pos=vector(Length_I*sin(angle), -Length_I*cos(angle), 0), radius=0.5, color=color.white)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.02, color=color.red)\n\n# Initial Values\nball.v = vector(0, 0, 0)\n\n# Time\nt = 0\ndt = 0.01\n\n# Animation\nwhile True:\n    rate(100)\n    F = vec(0, -m*g, 0) - b * ball.v\n    ball.a = F/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    rod.axis = ball.pos-ceiling.pos\n    t += dt",
      "mode": "initial",
      "timestamp": "2024-07-30 15:36:00",
      "serial_number": 1
    }
  ]
}