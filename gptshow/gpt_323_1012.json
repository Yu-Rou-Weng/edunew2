{
  "session_id": 1012,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\">This is a simulation of projectile motion with only gravitational force acting on the object. The object is launched horizontally with an initial velocity \\( v_0 \\) from a height \\( h \\). The object accelerates downward due to gravity and bounces off the ground elastically when it hits the ground.</span>\n\n3. Cyber Input Variable Mapping Information:\n    (1) initial_velocity is mapped to the variable named Angle_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Angle_I changes, let the animation rerun to the starting point and start with the updated initial_velocity.\n    \n\n3. Cyber Input Variable Mapping Information:\n    (1) height is mapped to the variable named Gyroscope_I with an initial value set to a 3-dimensional vector [[0, 0, 4]]\n    (2) When the value of Gyroscope_I changes, let the animation rerun to the starting point and start with the updated height.",
      "output": "```python\nfrom vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Parameters\ninitial_velocity = 5\nheight = vector(0, 0, 4)\ng = vector(0, -9.81, 0)  # acceleration due to gravity\n\n# Objects\nground = box(pos=vector(0,-1,0), size=vector(10,0.2,10), color=color.green)\nball = sphere(pos=height, radius=0.5, color=color.blue, make_trail=True)\n\n# Animation Function\ndef launch(angle):\n    ball.pos = height\n    angle_rad = radians(angle)\n    velocity = vector(initial_velocity*cos(angle_rad), initial_velocity*sin(angle_rad), 0)\n    t = 0\n    dt = 0.01\n    \n    while ball.pos.y >= height.y:\n        rate(100)\n        ball.pos = height + velocity*t + 0.5*g*t**2\n        t += dt\n\n    # Bounce off the ground\n    velocity.y = -velocity.y\n    \n    while ball.pos.y >= height.y:\n        rate(100)\n        ball.pos = height + velocity*t + 0.5*g*t**2\n        t += dt\n\n# Initial Animation\nlaunch(Angle_I)\n\n# Rerun Animation on Variable Change\ndef on_angle_change(change):\n    initial_velocity = change['new']\n    launch(initial_velocity)\n\nAngle_I.observe(on_angle_change, names='value')\n\ndef on_height_change(change):\n    height = change['new']\n    launch(initial_velocity)\n\nGyroscope_I.observe(on_height_change, names='value')\n```",
      "mode": "initial",
      "timestamp": "2024-09-12 07:58:00",
      "serial_number": 1
    }
  ]
}