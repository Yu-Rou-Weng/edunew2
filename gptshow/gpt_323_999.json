{
  "session_id": 999,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\">This is a simulation of projectile motion with only gravitational force acting on the object. The object is launched horizontally with an initial velocity \\( v_0 \\) from a height \\( h \\). The object accelerates downward due to gravity and bounces off the ground elastically when it hits the ground.</span>\n\n3. Cyber Input Variable Mapping Information:\n    (1) initial_velocity is mapped to the variable named Angle_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Angle_I changes, let the animation rerun to the starting point and start with the updated initial_velocity.\n    \n\n3. Cyber Input Variable Mapping Information:\n    (1) height is mapped to the variable named Gyroscope_I with an initial value set to a 3-dimensional vector [[0, 0, 4]]\n    (2) When the value of Gyroscope_I changes, let the animation rerun to the starting point and start with the updated height.",
      "output": "```python\nfrom vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Object Parameters\ninitial_velocity = 5\nheight = vector(0, 0, 4)\ng = vector(0, -9.81, 0)  # acceleration due to gravity\n\n# Objects\nground = box(pos=vector(0, 0, 0), size=vector(10, 0.1, 10), color=color.green)\nball = sphere(pos=height, radius=0.5, color=color.red, make_trail=True)\n\n# Physics Simulation Function\ndef projectile_motion():\n    ball.pos = height\n    ball.velocity = vector(initial_velocity, 0, 0)\n    \n    while ball.pos.y >= 0:\n        rate(60)\n        \n        ball.velocity += g * 0.01  # Update velocity due to gravity\n        ball.pos += ball.velocity * 0.01  # Update position\n        \n        if ball.pos.y < 0:\n            ball.velocity.y = -ball.velocity.y  # Bounce off the ground\n\n# Event Listener for Variable Changes\ndef on_change_angle_i(change):\n    global initial_velocity\n    initial_velocity = change['new']\n    projectile_motion()\n\ndef on_change_gyroscope_i(change):\n    global height\n    height = change['new']\n    projectile_motion()\n\n# Cyber Input Variable Mapping\nAngle_I = observe(5, names='Angle_I')\nAngle_I.observe(on_change_angle_i, names='value')\n\nGyroscope_I = observe(vector(0, 0, 4), names='Gyroscope_I')\nGyroscope_I.observe(on_change_gyroscope_i, names='value')\n\n# Run the simulation\nprojectile_motion()\n```",
      "mode": "initial",
      "timestamp": "2024-09-12 07:57:31",
      "serial_number": 1
    }
  ]
}