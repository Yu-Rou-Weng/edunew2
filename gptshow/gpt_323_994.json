{
  "session_id": 994,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\">This is a simulation of projectile motion with only gravitational force acting on the object. The object is launched horizontally with an initial velocity \\( v_0 \\) from a height \\( h \\). The object accelerates downward due to gravity and bounces off the ground elastically when it hits the ground.</span>\n\n3. Cyber Input Variable Mapping Information:\n    (1) initial_velocity is mapped to the variable named Angle_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Angle_I changes, let the animation rerun to the starting point and start with the updated initial_velocity.\n    \n\n3. Cyber Input Variable Mapping Information:\n    (1) height is mapped to the variable named Gyroscope_I with an initial value set to a 3-dimensional vector [[0, 0, 4]]\n    (2) When the value of Gyroscope_I changes, let the animation rerun to the starting point and start with the updated height.\n    ",
      "output": "from vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Object Motion & Parameter Settings\nground = box(pos=vector(0, -1, 0), size=vector(10, 0.1, 10), color=color.green)\nball = sphere(pos=vector(0, 5, 0), radius=0.5, color=color.red, make_trail=True)\n\ninitial_velocity = 5  # initial velocity\nheight = vector(0, 0, 4)  # initial height\n\ndef launch(angle, h):\n    ball.pos = vector(0, h[2], 0)\n    ball.velocity = vector(initial_velocity*cos(radians(angle)), 0, initial_velocity*sin(radians(angle)))\n\ndef reset():\n    global initial_velocity, height\n    launch(Angle_I, Gyroscope_I)\n    \ndef update():\n    reset()\n\n# Cyber Input Variable Mapping\nAngle_I = 5\nGyroscope_I = vector(0, 0, 4)\n\nreset()",
      "mode": "initial",
      "timestamp": "2024-09-12 07:57:16",
      "serial_number": 1
    }
  ]
}