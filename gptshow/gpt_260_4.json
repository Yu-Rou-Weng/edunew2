{
  "session_id": 4,
  "4_1_07_08_09_12_06": {
    "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the directions of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, the relationship between them is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this we can deduce:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, changing the starting angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython such as numpy, math and time",
    "output": "from vpython import *\n\n# Set the length and radius\nLength_I = 10\nRadius_I = 1\n\n# Create pendulum\nceiling = box(pos=vector(0,0,0), length=0.2, height=0.01, width=0.2)\nball = sphere(pos=vector(Length_I,0,0), radius=Radius_I, color=color.yellow)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01)\n\n# Set initial conditions\nball.v = vector(0, 0, 0)\ntheta = 0.1\ng = 9.8\nball.pos = vector(Length_I*sin(theta), -Length_I*cos(theta), 0)\ndt = 0.01\n\n# Update pendulum position over time\nwhile True:\n    rate(100)\n    alpha = -g*sin(theta)/Length_I\n    ball.v += vector(alpha*cos(theta), alpha*sin(theta), 0)*dt\n    ball.pos = rotate(ball.pos, angle=ball.v.x*dt, axis=vector(0,0,-1))\n    rod.axis = ball.pos - rod.pos\n    theta = atan(ball.pos.x/-ball.pos.y)",
    "mode": "initial"
  }
}