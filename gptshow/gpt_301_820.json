{
  "session_id": 820,
  "log": [
    {
      "input": "Please write a VPython code for \"Simple Harmonic Motion Caused by Electrostatic Force (Positioned above the Vertical Line)\"\n\n## Electrostatic Force Formula\n\nThe electrostatic force \\( F \\) is calculated from the Coulomb force between two charged particles. In this code, the electrostatic force is calculated using the following formula:\n\n$$\nF = \\frac{k \\cdot Q \\cdot q}{r^2}\n$$\n\nWhere:\n- \\( k \\) is the electrostatic constant, set in the code as $8.988 \\times 10^{9} \\ \\text{N\u00b7m}^2/\\text{C}^2$\n- \\( Q \\) is the charge of the blue ball, please set it to $1 \\times 10^{-10}$ in the code\n- \\( q \\) is the charge of the red ball, please set it to $-1 \\times 10^{-3}$ in the code\n- \\( r \\) is the distance between the two charged particles.\n\nAt the positions (-10, 0, 0) and (10, 0, 0), there are fixed blue balls each with a radius of 1 and a positive charge. At the position (0, 3, 0), there is a small ball with a radius of 0.3, carrying a negative charge, with an initial velocity of (0,0,0), and starts moving under the electrostatic force exerted by the two blue balls. There is a yellow line connecting the centers of the two blue balls. At (0, 3, 0) and (0, -3, 0), there are two horizontal white lines each with a length of 5.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Constants\nk = 8.988 * 10 ** 9  # N\u00b7m^2/C^2\nQ = 1 * 10 ** -10  # C\nq = -1 * 10 ** -3  # C\n\n# Objects\nR = 1  # radius of blue balls\nr = 0.3  # radius of red ball\nblue_ball_1 = sphere(pos=vector(-10, 0, 0), radius=R, color=color.blue)\nblue_ball_2 = sphere(pos=vector(10, 0, 0), radius=R, color=color.blue)\nred_ball = sphere(pos=vector(0, 3, 0), radius=r, color=color.red, velocity=vector(0, 0, 0))\n\n# Lines\nline = cylinder(pos=vector(-10, 0, 0), axis=vector(20, 0, 0), radius=0.1, color=color.yellow)\nline_1 = cylinder(pos=vector(0, 3, 0), axis=vector(0, 5, 0), radius=0.1, color=color.white)\nline_2 = cylinder(pos=vector(0, -3, 0), axis=vector(0, 5, 0), radius=0.1, color=color.white)\n\n# Time\ndt = 0.01\n\n# Animation\nwhile True:\n    rate(100)\n    r1 = red_ball.pos - blue_ball_1.pos\n    r2 = red_ball.pos - blue_ball_2.pos\n    F1 = k * Q * q / mag(r1) ** 2 * norm(r1)\n    F2 = k * Q * q / mag(r2) ** 2 * norm(r2)\n    red_ball.velocity = red_ball.velocity + (F1 + F2) * dt\n    red_ball.pos = red_ball.pos + red_ball.velocity * dt",
      "mode": "initial",
      "timestamp": "2024-07-26 09:15:40",
      "serial_number": 1
    }
  ]
}