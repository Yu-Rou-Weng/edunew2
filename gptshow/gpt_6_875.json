{
  "session_id": 875,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and the height to 400. Please draw the trajectory of the motion of a small ball. The center point of the canvas must be correctly set, so the order of writing the Parameter Settings in the program should be after the Screen Settings.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of horizontal projectile motion: Launch a horizontal ball that bounces off the floor when it hits.\nDraw the ball and the floor. Assume that the ball and the ground undergo an elastic collision, considering only the effect of gravity, meaning the ball accelerates downward due to gravity and bounces up when it hits the ground. Let the ball's motion stop after 6 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named `Speed_I` with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, let the animation rerun with the updated ball speed.\n\n(3) Do not resize the scene.\n(4) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\nSpeed_I = 1\ng = vector(0,-9.8,0)\ndt = 0.01\nt = 0\n\nscene = canvas(title='VPython Animation', width=700, height=400, center=vector(0,0,0), background=color.white)\n\nball = sphere(pos=vector(0,5,0), radius=0.5, color=color.red)\nball.velocity = vector(Speed_I,0,0)\nfloor = box(pos=vector(0,-0.5,0), size=vector(10,1,0), color=color.green)\n\ndef animation():\n    global t, Speed_I\n    while t < 6:\n        rate(100) \n        ball.velocity = ball.velocity + g*dt\n        ball.pos = ball.pos + ball.velocity*dt\n        if ball.pos.y < ball.radius:\n            ball.velocity.y = -ball.velocity.y\n        t = t + dt\n        if Speed_I != scene.userzoom:\n            t = 0\n            Speed_I = scene.userzoom\n            ball.velocity.x = Speed_I\n            ball.pos = vector(0,5,0)\n            break\n            \nscene.bind(\"mousedown\", animation)\nscene.waitfor(\"mousedown\")",
      "mode": "initial",
      "timestamp": "2024-08-16 18:29:40",
      "serial_number": 1
    }
  ]
}