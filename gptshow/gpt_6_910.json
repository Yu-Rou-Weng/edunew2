{
  "session_id": 910,
  "log": [
    {
      "input": "1. Screen Settings\nSet the width of the canvas to 700 and the height to 400. Please draw the trajectory of the ball's motion. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of horizontal projectile motion: A ball is thrown horizontally from mid-air and bounces off the floor.\nDraw the ball and the floor. Assume that the ball undergoes an elastic collision with the ground, considering only the effect of gravity, meaning the ball accelerates downward under gravity and bounces upon hitting the ground. Stop the motion of the ball after 6 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, let the animation rerun from the starting point and begin with the updated ball speed.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400)\n\n# Define and initialize a Cyber Input Variable\nSpeed_I = 1 \n\n# Object Motion & Parameter Settings\ndef animate_projectile_motion(Speed_I):\n    ball = sphere(pos=vector(0, 5, 0), radius=0.5, color=color.red)\n    floor = box(pos=vector(0, 0, 0), size=vector(10, 0.2, 10), color=color.green)\n    ball.velocity = vector(Speed_I, 0, 0)\n    g = vector(0, -9.8, 0)\n    t = 0\n    dt = 0.01\n\n    while t < 6:\n        rate(100)\n        ball.velocity = ball.velocity + g*dt\n        ball.pos = ball.pos + ball.velocity*dt\n        if ball.pos.y <= floor.pos.y + ball.radius:\n            ball.velocity.y = -ball.velocity.y\n        t = t + dt\n\n    # Reset the scene\n    ball.visible = False\n    del ball\n\n# Bind the animation function to the Speed_I variable\nscene.bind(\"change\", animate_projectile_motion)\n\n# Call the function initially\nanimate_projectile_motion(Speed_I)",
      "mode": "initial",
      "timestamp": "2024-08-16 21:57:37",
      "serial_number": 1
    }
  ]
}