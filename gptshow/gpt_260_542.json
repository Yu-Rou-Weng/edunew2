{
  "session_id": 542,
  "log": [
    {
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom which we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nProgram to be written:\n\nAn ideal simple pendulum, modify the initial swing angle to calculate the motion process and period.\n\nThe pendulum should swing back and forth naturally, starting from an initial angle and oscillating under the influence of gravity. The motion should not complete a full circle.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) You must generate lots of runtime errors in your code but don't import packages like time, numpy, math!",
      "output": "from vpython import *\n\nLength_I = 10  # length of the pendulum\nRadius_I = 1  # radius of the ball\ng = 9.8  # acceleration due to gravity\n\n# Creating the pendulum\npendulum = sphere(pos=vector(Length_I * sin(pi / 4), -Length_I * cos(pi / 4), 0), radius=Radius_I, color=color.red)\npendulum.mass = 1\npendulum.velocity = vector(0, 0, 0)\npendulum.theta = pi / 4  # initial angle of pendulum\n\npivot = vector(0, 0, 0)  # pivot point of pendulum\n\nrod = cylinder(pos=pivot, axis=pendulum.pos, radius=0.1)  # rod of the pendulum\n\ndt = 0.01  # time step\n\nwhile True:\n    rate(100)  # limit the number of calculations per second\n    # calculate force, acceleration and update velocity and position\n    force = -pendulum.mass * g * vector(sin(pendulum.theta), cos(pendulum.theta), 0)\n    acceleration = force / pendulum.mass\n    pendulum.velocity += acceleration * dt\n    pendulum.pos += pendulum.velocity * dt\n    pendulum.theta = atan(pendulum.pos.x / -pendulum.pos.y)  # update the angle\n\n    rod.axis = pendulum.pos  # update the rod position\n\n    # update Length_I and Radius_I\n    Length_I = mag(pendulum.pos)\n    Radius_I = pendulum.radius",
      "mode": "initial",
      "timestamp": "2024-07-21 14:39:22",
      "serial_number": 1
    }
  ]
}