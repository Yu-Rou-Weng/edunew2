{
  "session_id": 887,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 1000 and the height to 800. Please plot the trajectory of the ball. The center point of the canvas must be set correctly, thus the order of writing the Parameter Settings in the program should follow after the Screen Settings.\n\n2. Object Motion & Parameter Settings\nPlease draw a VPython animation of a horizontally projected ball: A ball is thrown horizontally and bounces off the floor upon impact.\nDraw the ball and the floor. Assume an elastic collision between the ball and the ground, considering only the effect of gravity, where the ball accelerates downward under gravity and bounces up when it hits the ground. Stop the motion of the ball after 6 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 5. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, let the animation rerun with the updated ball speed.\n\n(3) Do not resize the scene.\n(4) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=1000, height=800, center=vector(0,0,0), autoscale=False)\n\n# Parameter Settings\ng = 9.8 # gravity\ndt = 0.01 # time step\nt = 0 # initial time\nSpeed_I = 5 # initial speed\n\n# Object Motion\nfloor = box(length=4, height=0.005, width=4, color=color.green)\nball = sphere(radius=0.05, color=color.red, make_trail=True)\nball.pos = vector(0,0,0)\nball.v = vector(Speed_I, 0, 0) \n\nwhile t < 6:\n    rate(100)\n    ball.v.y = ball.v.y - g * dt\n    ball.pos = ball.pos + ball.v * dt\n    if ball.pos.y < 0:\n        ball.v.y = abs(ball.v.y)\n    t = t + dt",
      "mode": "initial",
      "timestamp": "2024-08-16 18:54:00",
      "serial_number": 1
    }
  ]
}