{
  "session_id": 1093,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\"># **Horizontal Projectile Motion**\n\nA small ball is launched horizontally from a height \\( h \\) with an initial velocity \\( v_0 \\). The ball accelerates downward under the influence of gravity and bounces upon hitting the ground.\nOnly the effect of gravity is considered, and the collision between the ball and the ground is elastic.</span></br></br>3. Cyber Input Variable Mapping Information:\n    (1) initial_height is mapped to the variable named Height_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Height_I changes, let the animation rerun to the starting point and start with the updated initial_height.",
      "output": "Sure, let's create a VPython animation to illustrate the horizontal projectile motion experiment with the given parameters. Here's the code:\n\n```python\nfrom vpython import *\n\n# Screen Settings\ncanvas(width=700, height=400)\n\n# Cyber Input Variable Mapping\nHeight_I = 5\n\ndef reset_scene():\n    global ball, initial_height\n    initial_height = Height_I\n    ball.pos = vector(0, initial_height, 0)\n    ball.v = vector(5, 0, 0)\n\ndef update_height():\n    reset_scene()\n\nscene.autoscale = False\nscene.range = 10\nscene.center = vector(0, initial_height/2, 0)\n\nground = box(pos=vector(0, 0, 0), size=vector(30, 0.1, 5), color=color.green)\n\nball = sphere(pos=vector(0, initial_height, 0), radius=0.5, color=color.blue, make_trail=True)\n\ndt = 0.01\ng = vector(0, -9.81, 0)  # acceleration due to gravity\n\nwhile True:\n    rate(100)\n    ball.pos = ball.pos + ball.v*dt\n    ball.v = ball.v + g*dt\n\n    if ball.pos.y - ball.radius <= ground.pos.y + ground.size.y/2:  # collision with the ground\n        ball.v.y *= -1\n\n    if ball.pos.y - ball.radius <= ground.pos.y + ground.size.y/2 and ball.v.y < 0.1:  # ball comes to rest\n        ball.v = vector(5, 0, 0)\n``` \n\nThis code sets up the VPython scene with a ball launched horizontally from a specified initial height and velocity. The ball accelerates downward due to gravity and bounces elastically upon hitting the ground. The height of the initial launch can be updated by changing the value of `Height_I` and rerunning the animation.",
      "mode": "initial",
      "timestamp": "2024-09-24 10:16:23",
      "serial_number": 1
    }
  ]
}