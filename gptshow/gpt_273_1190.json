{
  "session_id": 1190,
  "log": [
    {
      "input": "### 3D Elastic Collision (m1 \u2260 m2)This document describes the physical motion involved in a **3D elastic collision** between two spheres of different masses (\\(m_1 \\neq m_2\\)). The collision follows the principles of conservation of momentum and kinetic energy.---## Theoretical DerivationConsider two elastic spheres with masses \\(m_1\\) and \\(m_2\\) in a 3D space. Before the collision, their velocities are \\(\\vec{v}_1\\) and \\(\\vec{v}_2\\). After the collision, the velocities are \\(\\vec{v}_1'\\) and \\(\\vec{v}_2'\\). The conservation laws dictate the following:### Conservation of Momentum:\\[m_1 \\vec{v}_1 + m_2 \\vec{v}_2 = m_1 \\vec{v}_1' + m_2 \\vec{v}_2'\\]### Conservation of Kinetic Energy:\\[\\frac{1}{2} m_1 \\|\\vec{v}_1\\|^2 + \\frac{1}{2} m_2 \\|\\vec{v}_2\\|^2 = \\frac{1}{2} m_1 \\|\\vec{v}_1'\\|^2 + \\frac{1}{2} m_2 \\|\\vec{v}_2'\\|^2\\]For \\(m_1 \\neq m_2\\), the final velocities after the collision can be expressed as:\\[\\vec{v}_1' = \\vec{v}_1 + \\frac{2 m_2}{m_1 + m_2} \\cdot \\frac{\\langle \\vec{v}_2 - \\vec{v}_1, \\vec{x}_1 - \\vec{x}_2 \\rangle}{\\|\\vec{x}_1 - \\vec{x}_2\\|^2} (\\vec{x}_1 - \\vec{x}_2)\\]\\[\\vec{v}_2' = \\vec{v}_2 + \\frac{2 m_1}{m_1 + m_2} \\cdot \\frac{\\langle \\vec{v}_1 - \\vec{v}_2, \\vec{x}_2 - \\vec{x}_1 \\rangle}{\\|\\vec{x}_2 - \\vec{x}_1\\|^2} (\\vec{x}_2 - \\vec{x}_1)\\]---## Motion Description### Parameters- **Masses**: \\(m_1 \\neq m_2\\), representing the differing masses of the spheres.- **Initial Velocities**: Sphere 1 starts with velocity \\(\\vec{v}_1\\), and Sphere 2 starts with \\(\\vec{v}_2\\).- **Collision Dynamics**: When the spheres collide, their post-collision velocities are computed using the equations for \\(\\vec{v}_1'\\) and \\(\\vec{v}_2'\\).### Dynamics1. **Pre-Collision Motion**:\u00a0 \u00a0- Each sphere moves in a straight line according to its initial velocity.2. **Collision**:\u00a0 \u00a0- A collision occurs when the distance between the centers of the spheres equals the sum of their radii.\u00a0 \u00a0- New velocities are calculated based on the equations above, taking into account the masses of the spheres.3. **Post-Collision Motion**:\u00a0 \u00a0- Spheres continue to move with updated velocities.### Energy Conservation- The total kinetic energy before and after the collision remains constant:\\[K = \\frac{1}{2} m_1 \\|\\vec{v}_1\\|^2 + \\frac{1}{2} m_2 \\|\\vec{v}_2\\|^2\\]",
      "output": "from vpython import *\n\n# Parameters\nm1 = 1  # mass of sphere 1\nm2 = 2  # mass of sphere 2\nv1_initial = vector(1, 0, 0)  # initial velocity of sphere 1\nv2_initial = vector(0, 1, 0)  # initial velocity of sphere 2\n\n# Objects\nsphere1 = sphere(pos=vector(-5, 0, 0), radius=1, color=color.red, make_trail=True)\nsphere2 = sphere(pos=vector(5, 0, 0), radius=1, color=color.blue, make_trail=True)\n\n# Initial velocities\nsphere1.velocity = m2/(m1+m2) * (v2_initial - v1_initial)\nsphere2.velocity = m1/(m1+m2) * (v1_initial - v2_initial)\n\n# Time step and animation\ndt = 0.01\nwhile True:\n    rate(100)\n    # Update positions\n    sphere1.pos += sphere1.velocity * dt\n    sphere2.pos += sphere2.velocity * dt\n    # Check for collision\n    if mag(sphere1.pos - sphere2.pos) <= sphere1.radius + sphere2.radius:\n        v1_final = sphere1.velocity + 2 * m2/(m1 + m2) * dot(sphere2.velocity - sphere1.velocity, sphere1.pos - sphere2.pos) / mag(sphere1.pos - sphere2.pos)**2 * (sphere1.pos - sphere2.pos)\n        v2_final = sphere2.velocity + 2 * m1/(m1 + m2) * dot(sphere1.velocity - sphere2.velocity, sphere2.pos - sphere1.pos) / mag(sphere2.pos - sphere1.pos)**2 * (sphere2.pos - sphere1.pos)\n        sphere1.velocity = v1_final\n        sphere2.velocity = v2_final",
      "mode": "initial",
      "timestamp": "2024-12-26 19:21:29",
      "serial_number": 1
    }
  ]
}