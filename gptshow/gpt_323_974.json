{
  "session_id": 974,
  "log": [
    {
      "input": "Screen Settings:\nSet the canvas width to 700 and height to 400. Do not change the canvas size.\n\nObject Motion & Parameter Settings:\nCreate a VPython animation to illustrate the following physics experiment:\nHorizontal projectile motion refers to the process in which an object is thrown horizontally from a certain height and moves along a curved path under the influence of gravity. When the ball hit the ground, it bounces back. The ball should stop moving after 6 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) initial_velocity is mapped to the variable named Velocity_I with an initial value set to 5.\n(2) When the value of Velocity_I changes, let the animation rerun to the starting point and start with the updated initial_velocity.\n",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400)\n\n# Constants\ng = 9.81  # acceleration due to gravity\n\n# Objects\nground = box(pos=vector(0, -1, 0), size=vector(10, 0.1, 2), color=color.green)\nball = sphere(pos=vector(-5, 0, 0), radius=0.5, color=color.red, make_trail=True)\n\n# Initial Parameters\nVelocity_I = 5\nball.velocity = vector(Velocity_I, 0, 0)\n\n# Animation Loop\nt = 0\ndt = 0.01\n\nwhile t < 6:\n    rate(100)\n    \n    if ball.pos.x >= 5:\n        ball.velocity.x *= -1  # Reverse direction upon hitting the wall\n    \n    ball.pos = ball.pos + ball.velocity * dt\n    ball.velocity.y -= g * dt  # Update vertical velocity due to gravity\n    t += dt\n    \n    if ball.pos.y <= 0 and ball.velocity.y < 0:\n        ball.velocity.y *= -0.9  # Loss of energy upon bounce\n\n    if t >= 6:\n        break",
      "mode": "initial",
      "timestamp": "2024-09-03 14:37:30",
      "serial_number": 1
    }
  ]
}