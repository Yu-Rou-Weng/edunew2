{
  "session_id": 921,
  "log": [
    {
      "input": "Please write a Vpython animation to simulate \"Horizontal Projectile Motion.\"\n\n1. Basic Introduction & Parameter Settings\nThe floor length is 25. From the X coordinate position -10, horizontally launch a ball with a radius of 0.5 at a height of 15, with an initial speed of 5.\n\n2. Screen Settings\nSet the center of the canvas at (0, 7.5, 0). Set the width of the canvas to 700 and the height to 400. Draw the trajectory of the ball's motion. Do not adjust the size of the scene.\n\n3. Object Motion\nAssume that the ball undergoes an elastic collision with the ground, and only consider the effect of gravity, meaning the ball accelerates downward due to gravity and bounces upon hitting the ground. Stop the motion of the ball when it reaches the X coordinate position of 12.5.\n\nThe order of writing the Parameter Settings should follow after the Screen Settings.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=0.5\n\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(title=\"Horizontal Projectile Motion\", width=700, height=400, center=vector(0,7.5,0), background=color.white)\n\n# Parameter Settings\nfloor = box(pos=vector(0,0,0), length=25, height=0.01, width=4, color=color.green)\nball = sphere(pos=vector(-10,15,0), radius=0.5, color=color.red, make_trail=True, trail_color=color.black)\nball.velocity = vector(5, 0, 0)\ng = vector(0, -9.8, 0)\n\n# Object Motion\nwhile True:\n    rate(100)\n    ball.velocity = ball.velocity + g*(1/100)\n    if ball.pos.y < ball.radius and ball.velocity.y < 0:\n        ball.velocity.y = -ball.velocity.y\n    ball.pos = ball.pos + ball.velocity*(1/100)\n    if ball.pos.x > 12.5:\n        break",
      "mode": "initial",
      "timestamp": "2024-07-31 18:05:08",
      "serial_number": 1
    }
  ]
}