{
  "session_id": 47,
  "log": [
    {
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, so the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython such as numpy, math and time",
      "output": "from vpython import *\n\nLength_I = 10    # (1) Define and initialize Length_I\nRadius_I = 1    # (2) Define and initialize Radius_I\n\n# Create pendulum\nceiling = box(length=0.2, height=0.01, width=0.2, color=color.blue)\nball = sphere(radius=Radius_I, color=color.red)  # (4) Use Radius_I for ball radius\nstring = cylinder(radius=0.01, color=color.yellow)\n\n# Initialize pendulum parameters\nball.pos = vector(0, -Length_I, 0)  # (3) Use Length_I for ball position\nstring.pos = ceiling.pos\nstring.axis = ball.pos - string.pos\nball.v = vector(0, 0, 0)\nball.m = 1\ng = 9.8\ndt = 0.001\n\n# Animation loop\nwhile True:\n    rate(1000)\n    ball.a = vector(0, -g, 0)\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    string.axis = ball.pos - string.pos",
      "mode": "initial",
      "timestamp": "2024-07-08 14:48:29",
      "serial_number": 1
    }
  ]
}