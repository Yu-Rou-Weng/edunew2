{
  "session_id": 914,
  "log": [
    {
      "input": "Please create a Vpython animation to simulate \"horizontal projectile motion.\"\n\nSet the canvas with the center point at (0, 7.5, 0). The floor length is 25. From the X-coordinate position -10, horizontally throw a ball with a radius of 0.5 and an initial speed of 5, at a height of 15. Assume that the ball has an elastic collision with the ground, only considering the effect of gravity, meaning the ball accelerates downward due to gravity and bounces upon hitting the ground. Stop the motion when the ball reaches the X-coordinate position 12.5. Please plot the trajectory of the ball's motion. Do not adjust the size of the scene.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=0.5\n\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Cyber Input Variable\nRadius_I = 0.5\n\n# Scene setup\nscene = canvas(center=vector(0, 7.5, 0))\n\n# Floor\nfloor = box(pos=vector(0, 0, 0), length=25, height=0.1, width=4, color=color.green, opacity=0.3)\n\n# Ball\nball = sphere(pos=vector(-10, 15, 0), radius=Radius_I, color=color.red, make_trail=True, v=vector(5, 0, 0))\n\n# Constants\ng = 9.8  # acceleration due to gravity\n\n# Time\ndt = 0.01  # time step\n\nwhile True:\n    rate(100)  # limit the number of loops per second\n\n    # Update velocity & position\n    ball.v.y -= g * dt\n    ball.pos += ball.v * dt\n\n    # Check collision with floor\n    if ball.pos.y <= ball.radius:\n        ball.v.y = abs(ball.v.y)\n\n    # Stop motion once X-coordinate reaches 12.5\n    if ball.pos.x >= 12.5:\n        break",
      "mode": "initial",
      "timestamp": "2024-07-31 15:13:46",
      "serial_number": 1
    }
  ]
}