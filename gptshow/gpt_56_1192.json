{
  "session_id": 1192,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\"># **Horizontal Projectile Motion**\n\nA small ball is launched horizontally from a height \\( h \\) with an initial velocity \\( v_0 \\). The ball accelerates downward under the influence of gravity and bounces upon hitting the ground.\nOnly the effect of gravity is considered, and the collision between the ball and the ground is elastic.</span></br></br>3. Cyber Input Variable Mapping Information:\n    (1) initial_height is mapped to the variable named Height_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Height_I changes, let the animation rerun to the starting point and start with the updated initial_height.",
      "output": "Here is the code to implement the physics experiment of Horizontal Projectile Motion in VPython:\n\n```python\nfrom vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Parameters\ninitial_height = 5  # Initial height of the ball\ng = 9.81  # Acceleration due to gravity\n\n# Objects\nground = box(pos=vector(0, 0, 0), size=vector(10, 0.1, 5), color=color.green)\nball = sphere(radius=0.5, color=color.red)\n\n# Animation function\ndef animate():\n    ball.pos = vector(-5, initial_height, 0)\n    ball.velocity = vector(1, 0, 0)  # Initial velocity of the ball\n\n    dt = 0.01\n    t = 0\n\n    while ball.pos.y >= 0:\n        rate(100)\n        ball.pos.x += ball.velocity.x * dt\n        ball.pos.y = initial_height - 0.5 * g * t**2\n        t += dt\n\n    ball.velocity.y = -ball.velocity.y  # Bounce back with the same horizontal velocity\n\n# Initial animation\nanimate()\n\n# Cyber Input Variable Mapping\ndef update_height_I():\n    global initial_height\n    initial_height = Height_I.value\n    scene.delete()\n    ground = box(pos=vector(0, 0, 0), size=vector(10, 0.1, 5), color=color.green)\n    ball = sphere(radius=0.5, color=color.red)\n    animate()\n\nHeight_I = slider(min=0, max=10, value=5, step=0.1, bind=update_height_I)\n```\n\nThis code sets up the VPython environment to simulate the horizontal projectile motion experiment. The initial height of the ball can be adjusted using the `Height_I` slider, and the animation will rerun with the updated initial height.",
      "mode": "initial",
      "timestamp": "2024-09-24 10:20:29",
      "serial_number": 1
    }
  ]
}