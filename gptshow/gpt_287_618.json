{
  "session_id": 618,
  "log": [
    {
      "input": "Kepler's Third Law of Planetary Motion\n\nKepler's laws of planetary motion consist of the following three laws:\n\n1. **First Law (The Law of Orbits)**: The orbit of every planet around the Sun is an ellipse, with the Sun at one of the two foci.\n\n2. **Second Law (The Law of Areas)**: A line segment joining a planet and the Sun sweeps out equal areas during equal intervals of time. If the distance between the Sun and the planet is $r$, the planet's speed is $v$, and the angle between $r$ and $v$ is $\\theta$, then the area swept out by the line segment in a unit of time is\n$$\n\\frac{\\Delta A}{\\Delta t} = \\frac{1}{2} rv \\sin{\\theta} = \\text{constant}\n$$\n\n3. **Third Law (The Law of Periods)**: The square of the orbital period $T$ of a planet is proportional to the cube of the semi-major axis $a$ of its orbit\n$$\n\\frac{a^3}{T^2} = \\text{constant}\n$$\n\nThe first law arises because only gravitational forces act between the Sun and the planets, and according to the law of universal gravitation, only ellipses are stable orbits. The second law is due to the conservation of angular momentum relative to the Sun, as the gravitational force acts through the Sun. The third law can be derived using the law of gravity as the centripetal force. If integrated with actual data from the solar system, these three laws can be graphically demonstrated.\n\nProgramming Aspect\n\nThis is based on the simulation of planetary motion, adding a custom planet in addition to Earth to illustrate Kepler\u2019s three laws of planetary motion. Assuming the average orbital radius of the custom planet is $n \\times d$, and its eccentricity is $ec$, then its aphelion distance is $n \\times (1 + ec) \\times d$. If the speed of Earth at aphelion is $v_0$, then the speed of the custom planet at aphelion is $\\frac{v_0}{\\sqrt{n}} \\cdot \\sqrt{\\frac{1 - ec}{1 + ec}}$. The rest of the model remains largely unchanged.\n\nThe derivation of Earth's speed is as follows:\n\n#### Assuming the mass of the Sun is $M$, the mass of Earth is $m$, the average orbital radius of Earth is $d$, and the speed of Earth at aphelion is $v_0$, the gravitational force from the Sun acting as centripetal force gives\n\n$$\n\\frac{GMm}{d^2} = m \\cdot \\frac{v_0^2}{d} \\Rightarrow v_0 = \\sqrt{\\frac{GM}{d}}\n$$\n\n#### The derivation of the custom planet\u2019s speed at aphelion is as follows:\n\nAssuming the mass of the Sun is $M$, the mass of the planet is $m$, the average orbital radius of the planet is $a = nd$, the speed of the planet at perihelion is $v_1$, and at aphelion is $v_2$, conservation of angular momentum gives\n\n$$\nL = (1 - e) a m v_1 = (1 + e) a m v_2 \\Rightarrow v_1 = \\frac{1 + e}{1 - e} v_2\n$$\n\nFrom the conservation of mechanical energy, we get\n\n$$\n\\frac{1}{2} m v_1^2 + \\left[ - \\frac{GMm}{(1 - e) a} \\right] = \\frac{1}{2} m v_2^2 + \\left[ - \\frac{GMm}{(1 + e) a} \\right]\n$$\n\nSubstituting the relationship between $v_1$ and $v_2$,\n\n$$\n\\left( \\frac{1 + e}{1 - e} \\right)^2 v_2^2 - \\frac{2GM}{(1 - e) a} = v_2^2 - \\frac{2GM}{(1 + e) a}\n$$\n\n$$\n\\left[ \\left( \\frac{1 + e}{1 - e} \\right)^2 - 1 \\right] v_2^2 = \\left( \\frac{1}{1 - e} - \\frac{1}{1 + e} \\right) \\frac{2GM}{a}\n$$\n\n$$\n4e v_2^2 (1 - e)^2 = 4e \\frac{GM}{(1 - e)(1 + e) a}\n$$\n\n$$\nv_2 = \\sqrt{\\frac{GM}{a}} \\cdot \\frac{1 + e}{1 - e} = \\sqrt{\\frac{GM}{nd}} \\cdot \\frac{1 + e}{1 - e} = \\frac{1 + e}{1 - e} \\cdot \\frac{v_0}{\\sqrt{n}}\n$$\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1E10\n\n(2) Radius_I is the radius of the planet. When Radius_I changes to a new value, the radius of the planet also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Constants\nG = 6.67430e-11 # gravitational constant\nM = 1.989e30 # mass of the Sun\nm = 5.972e24 # mass of Earth\nd = 1.496e11 # average orbital radius of Earth\nv0 = sqrt(G * M / d) # speed of Earth at aphelion\n\n# Parameters for the custom planet\nn = 1.5 # average orbital radius of the custom planet is n times d\nec = 0.4 # eccentricity of the custom planet's orbit\naphelion_distance = n * (1 + ec) * d\nv2 = v0 / sqrt(n) * sqrt((1 - ec) / (1 + ec)) # speed of the custom planet at aphelion\n\n# Create objects\nSun = sphere(pos=vector(0, 0, 0), radius=2e10, color=color.yellow)\nEarth = sphere(pos=vector(d, 0, 0), radius=1e10, color=color.blue, make_trail=True)\nplanet = sphere(pos=vector(aphelion_distance, 0, 0), radius=1e10, color=color.red, make_trail=True)\n\n# Initial velocities\nEarth.velocity = vector(0, v0, 0)\nplanet.velocity = vector(0, v2, 0)\n\n# Time step\ndt = 60 * 60 * 24\n\n# Animation loop\nwhile True:\n    rate(100)\n\n    # Calculate the gravitational force on Earth and the custom planet\n    F_Earth = -G * M * m * norm(Earth.pos) / mag2(Earth.pos)\n    F_planet = -G * M * m * norm(planet.pos) / mag2(planet.pos)\n\n    # Update velocities and positions\n    Earth.velocity += F_Earth / m * dt\n    Earth.pos += Earth.velocity * dt\n\n    planet.velocity += F_planet / m * dt\n    planet.pos += planet.velocity * dt",
      "mode": "initial",
      "timestamp": "2024-07-24 05:22:52",
      "serial_number": 1
    }
  ]
}