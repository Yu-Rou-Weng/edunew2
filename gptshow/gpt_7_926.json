{
  "session_id": 926,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and height to 400. Please draw the trajectory of the ball's motion. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of a ball being horizontally projected: a ball is thrown horizontally from the air, hits the floor, and bounces. Draw both the ball and the floor. Assume that the ball undergoes an elastic collision with the ground, with only the effect of gravity considered, meaning the ball accelerates downward due to gravity and bounces up when it hits the ground. Allow the ball to move for 10 seconds before stopping.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, let the animation rerun from the starting point and start with the updated ball speed.\n\n(3) Define and initialize a Cyber Input Variable named Height_I with an initial value set to 15. This variable represents the height of the ball above the ground.\n\n(4) During the animation, whenever the value of the Height_I variable changes, let the animation rerun from the starting point and start with the updated height of the ball above the ground.\n(5) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Cyber Input Variable Mapping Information\nSpeed_I = 1\nHeight_I = 15\n\n# Screen Settings\nscene = canvas(width=700, height=400, center=vector(0, Height_I/2, 0))\n\n# Object Motion & Parameter Settings\nfloor = box(length=25, height=0.5, width=4, color=color.green)\nball = sphere(pos=vector(-10, Height_I, 0), radius=1, color=color.red)\nball.velocity = vector(Speed_I, 0, 0)\ng = 9.8\nt = 0\ndt = 0.01\n\nwhile t < 10:\n    rate(100)\n    ball.pos = ball.pos + ball.velocity*dt\n    if ball.pos.y < 1:\n        ball.velocity.y = abs(ball.velocity.y)\n    else:\n        ball.velocity.y = ball.velocity.y - g*dt\n    t = t + dt",
      "mode": "initial",
      "timestamp": "2024-08-18 19:55:22",
      "serial_number": 1
    }
  ]
}