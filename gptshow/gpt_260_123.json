{
  "session_id": 123,
  "log": [
    {
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\n\nProgram to be written:\n\nAn ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython such as numpy, math and time",
      "output": "from vpython import *\n\n# Create scene\nscene = canvas(title='Simple Pendulum')\n\n# Constants\ng = 9.81  # gravity\n\n# Initial Parameters\nLength_I = 10  # initial length of the pendulum\nRadius_I = 1  # initial radius of the ball\ntheta = 0.1  # initial angle \n\n# Objects\nrod = cylinder(pos=vector(0,0,0), axis=vector(Length_I*cos(theta), -Length_I*sin(theta), 0), radius=0.01)\nball = sphere(pos=rod.axis, radius=Radius_I, color=color.yellow)\n\n# Time parameters\nt = 0  # time\ndt = 0.01  # time step\n\nwhile True:\n    rate(100)  # limit the animation speed to 100 frames per second\n    \n    # calculate the angular acceleration\n    alpha = -g/Length_I * sin(theta)\n    \n    # update the angle and velocity\n    theta += alpha*dt\n    \n    # update the position of the rod and the ball\n    rod.axis = vector(Length_I*cos(theta), -Length_I*sin(theta), 0)\n    ball.pos = rod.axis\n    \n    # update time\n    t += dt\n\n    # update Length_I and Radius_I\n    Length_I = rod.length\n    Radius_I = ball.radius",
      "mode": "initial",
      "timestamp": "2024-07-09 18:59:06",
      "serial_number": 1
    }
  ]
}