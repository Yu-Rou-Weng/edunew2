{
  "session_id": 62,
  "log": [
    {
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of the torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship can be expressed as:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. Ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython such as numpy, math and time",
      "output": "from vpython import *\n\n# Constants\ng = 9.8 # gravity\n\n# Variables from cyber input\nLength_I = 10 # length of the pendulum\nRadius_I = 1 # radius of the ball\n\n# Create objects\nceiling = box(length=0.2, height=0.2, width=0.2, color=color.green) # ceiling\nball = sphere(radius=Radius_I, color=color.red, make_trail=True) # ball at the end of the pendulum\nrod = cylinder(radius=0.01, color=color.yellow) # rod of the pendulum\n\n# Initial conditions\ntheta = 0.2 # initial angle\nball.pos = vector(Length_I*sin(theta), Length_I*cos(theta), 0) # position of the ball\nrod.axis = ball.pos # axis of the rod\nball.velocity = vector(0, 0, 0) # initial velocity\nt = 0 # initial time\ndt = 0.01 # time step\n\n# Animation\nwhile True:\n    rate(100) # limit the animation speed to 100 loops per second\n    alpha = g*sin(theta) / Length_I # angular acceleration\n    ball.velocity += vector(-alpha*sin(theta), -alpha*cos(theta), 0) * dt # change in velocity\n    ball.pos += ball.velocity * dt # change in position\n    rod.axis = ball.pos # change in rod axis\n    theta = atan(ball.pos.x/ball.pos.y) # update angle\n    t += dt # update time",
      "mode": "initial",
      "timestamp": "2024-07-08 17:34:28",
      "serial_number": 1
    }
  ]
}