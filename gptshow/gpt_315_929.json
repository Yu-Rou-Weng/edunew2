{
  "session_id": 929,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and height to 400. Please plot the trajectory of the ball. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings\nPlease draw a VPython animation of horizontal projectile motion: launch a ball horizontally from midair, which then bounces off the ground.\nDraw both the ball and the ground. Assume that the ball undergoes an elastic collision with the ground, considering only the effect of gravity, meaning the ball accelerates downward due to gravity and bounces upon hitting the ground. Stop the motion of the ball after 10 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, the speed of the moving ball should be immediately updated to the new value of Speed_I.\n\n(3) Define and initialize a Cyber Input Variable named Height_I with an initial value set to 15. This variable represents the height of the ball above the ground.\n\n(4) During the animation, whenever the value of the Height_I variable changes, the height of the ball above the ground should be immediately updated to the new value of Height_I.\n(5) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen settings\nscene = canvas(width = 700, height = 400)\n\n# Object motion & parameter settings\nball = sphere(pos = vector(0, 15, 0), radius = 0.5, color = color.red, make_trail = True)\nground = box(pos = vector(0, 0, 0), size = vector(20, 0.2, 20), color = color.green)\n\n# Define and initialize cyber input variables\nSpeed_I = 1\nHeight_I = 15\n\n# Set the ball's initial velocity and acceleration\nball.velocity = vector(Speed_I, 0, 0)\nball.acceleration = vector(0, -9.8, 0)\n\n# Time settings\nt = 0\ndt = 0.01\n\nwhile t < 10:\n    rate(100)\n\n    # Update the ball's velocity and position\n    ball.velocity = ball.velocity + ball.acceleration * dt\n    ball.pos = ball.pos + ball.velocity * dt\n\n    # If the ball hits the ground, reverse its y-velocity (elastic collision)\n    if ball.pos.y <= ball.radius:\n        ball.velocity.y = abs(ball.velocity.y)\n\n    # Update the ball's speed and height if the corresponding input variables change\n    if ball.velocity.x != Speed_I:\n        ball.velocity.x = Speed_I\n    if ball.pos.y != Height_I:\n        ball.pos.y = Height_I\n\n    # Increase the time\n    t += dt",
      "mode": "initial",
      "timestamp": "2024-08-18 20:32:38",
      "serial_number": 1
    }
  ]
}