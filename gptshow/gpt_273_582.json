{
  "session_id": 582,
  "log": [
    {
      "input": "Oblique Projectile Motion, Ball Stops When It Hits the Ground, With Air Resistance\n\nA ball is thrown from the ground with an initial velocity v0 and an angle \ud835\udf03. The ball accelerates downwards due to gravity, and the effects of gravity and air resistance $f = -b v$, where b = 0.1, are considered. Plot the trajectories of the ball with and without considering air resistance.\n\nParameter Settings\nThe program for oblique projectile motion with air resistance is similar to the one without air resistance, but it includes additional parameters for the mass m of the ball and the coefficient of air resistance b. To record the flight time of the ball, four new variables s1, s2, t1, and t2 are added.\n\nDisplay Settings\nTo compare with the ideal situation without air resistance, two balls need to be plotted: ball, considering air resistance, and ball2, in the ideal situation. Since the acceleration of ball depends on its velocity, it can be set within the while loop.\n\nObject Motion\nTo stop the animation only after both balls have hit the floor, the condition set in the while loop is:\n\nball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size\nSince ball considers air resistance, it requires the addition of:\n\nf = -b*ball.v\nball.a = vector(0, -g, 0) + f/m\nThe air resistance is calculated based on the current velocity, and then plugged into $F = ma$ to update acceleration.\n\nTo record flight time, initially set the states s1 and s2 to False. When the ball touches the ground for the first time, change the state to True and store the time in t1 and t2.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Speed_I as a cyber input variable, set Speed_I=30\n\n(2) Speed_I is the initial velocity of the ball. When Speed_I changes to a new value, the initial velocity of the ball also changes accordingly.\n(3) Do not import packages that are not supported by VPython such as numpy, math and time.",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "mode": "initial",
      "timestamp": "2024-07-24 01:04:34",
      "serial_number": 1
    },
    {
      "input": "Please update the program by fixing the following error:\ndt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:04:55",
      "serial_number": 2
    },
    {
      "input": "Please update the program by fixing the following error:\ndt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:04:58",
      "serial_number": 3
    },
    {
      "input": "Please update the program by fixing the following error:\nt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nt = 0\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t\n    t = t + dt",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:05:19",
      "serial_number": 4
    },
    {
      "input": "Please update the program by fixing the following error:\nt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\nt = 0 # define t\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t\n\n    t += dt # increment t",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:05:20",
      "serial_number": 5
    },
    {
      "input": "Please update the program by fixing the following error:\nt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\nt = 0 # time\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n\n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n\n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t\n\n    t += dt # update time",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:05:23",
      "serial_number": 6
    },
    {
      "input": "Please update the program by fixing the following error:\nt is not defined\n\nHere's the current program:\nfrom vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt1, t2 = 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t",
      "output": "from vpython import *\n\n# Parameter Settings\nsize = 0.25 # ball radius\ng = 9.8 # gravity in m/s^2\nheight = 15.0 # initial height\nSpeed_I = 30 # initial speed\nangle = 60.0 # launch angle\nb = 0.1 # air resistance coefficient\nm = 0.2 # mass of the ball\ndt = 0.01 # time step\n\n# Transform angle to radians\ntheta = angle*pi/180 \n\n# Create objects\nfloor = box(length=30, height=0.01, width=10, color=color.blue)\nball = sphere(radius=size, color=color.red, make_trail=True)\nball2 = sphere(radius=size, color=color.green, make_trail=True)\n\n# Initial conditions\nball.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball.pos = vector(-15, height, 0)\nball2.v = vector(Speed_I*cos(theta), Speed_I*sin(theta), 0)\nball2.pos = vector(-15, height, 0)\n\ns1, s2 = False, False\nt, t1, t2 = 0, 0, 0\n\n# Display Settings\nscene.autoscale = False\n\nwhile ball.pos.y - floor.pos.y >= size or ball2.pos.y - floor.pos.y >= size:\n    rate(300)\n    \n    # motion of ball considering air resistance\n    f = -b*ball.v\n    ball.a = vector(0, -g, 0) + f/m\n    ball.v += ball.a*dt\n    ball.pos += ball.v*dt\n    \n    # motion of ball2 without air resistance\n    ball2.v += vector(0, -g, 0)*dt\n    ball2.pos += ball2.v*dt\n    \n    # record flight time\n    if not(s1) and ball.pos.y - floor.pos.y <= size:\n        s1 = True\n        t1 = t\n    if not(s2) and ball2.pos.y - floor.pos.y <= size:\n        s2 = True\n        t2 = t\n        \n    t += dt",
      "mode": "fix_error",
      "timestamp": "2024-07-24 01:05:26",
      "serial_number": 7
    }
  ]
}