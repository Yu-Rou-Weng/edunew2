{
  "session_id": 924,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and the height to 400. Please draw the trajectory of the ball's movement. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of horizontal projectile motion: A ball is thrown horizontally from mid-air and bounces upon hitting the ground.\nDraw both the ball and the ground. Assume that the ball undergoes an elastic collision with the ground, taking into account only the effect of gravity, meaning the ball accelerates downward due to gravity and bounces upon hitting the ground. Let the motion of the ball stop after 10 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, within the `while` loop, whenever the value of the Speed_I variable changes, let the animation rerun from the starting point with the updated ball speed.\n\n(3) Define and initialize a Cyber Input Variable named Height_I with an initial value set to 15. This variable represents the height of the ball above the ground.\n\n(4) During the animation, within the `while` loop, whenever the value of the Height_I variable changes, let the animation rerun from the starting point with the updated height of the ball above the ground.\n(5) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Define and initialize Cyber Input Variables\nSpeed_I = 1\nHeight_I = 15\n\n# Screen Settings\nscene = canvas(width=700, height=400)\n\n# Object Settings\nground = box(length=40, height=0.5, width=4, color=color.green)\nball = sphere(pos=vector(-15, Height_I, 0), radius=1, color=color.red)\n\n# Parameter Settings\nball.velocity = vector(Speed_I, 0, 0)\ng = vector(0, -9.8, 0)\nt = 0\ndt = 0.01\nball.trail = curve(color=ball.color)  # trajectory\n\n# Motion\nwhile t < 10:\n    rate(100)\n    ball.pos = ball.pos + ball.velocity*dt\n    if ball.pos.y < ground.height/2:  # if the ball hits the ground\n        ball.velocity.y = abs(ball.velocity.y)  # bouncing\n    else:\n        ball.velocity = ball.velocity + g*dt  # gravity\n    ball.trail.append(pos=ball.pos)  # drawing trajectory\n    t = t + dt\n\n    # Check Cyber Input Variables\n    if Speed_I != ball.velocity.x:\n        ball.velocity.x = Speed_I\n        ball.trail.clear()\n        ball.pos = vector(-15, Height_I, 0)\n        t = 0\n    if Height_I != ball.pos.y:\n        ball.trail.clear()\n        ball.pos.y = Height_I\n        t = 0",
      "mode": "initial",
      "timestamp": "2024-08-18 19:53:21",
      "serial_number": 1
    }
  ]
}