{
  "session_id": 1200,
  "log": [
    {
      "input": "## Electrostatic Force and Simple Harmonic MotionIn the study of simple harmonic motion caused by gravitational force, we observed similar motion patterns due to the resemblance between Coulomb's law and the law of universal gravitation. Here, we examine a scenario where simple harmonic motion is induced by electrostatic forces.\u00a0\u00a0## DescriptionIn this setup, two charged spheres with fixed positions are placed along a straight line, with a movable charged sphere positioned to the right of the midpoint between them. The movable sphere is initially at rest, and the only forces acting on it are the electrostatic forces exerted by the two fixed charges.\u00a0When displaced slightly from its equilibrium position, the movable charged sphere experiences a net restoring force proportional to its displacement, resulting in simple harmonic motion.**Key Details:**- Two fixed charges are separated by a distance \\(2d\\).- The movable charge starts from a distance \\(h\\) to the right of the center of the fixed charges.- The electrostatic force on the movable charge is given by Coulomb's law and acts along the line connecting the charges.- The motion is periodic with a theoretical period \\(T\\), which depends on the charges, masses, and distances involved.The scenario demonstrates the principles of simple harmonic motion under electrostatic forces and provides an opportunity to explore the dynamic behavior of charged particles in an electric field.---",
      "output": "from vpython import *\n\n# Constants\nk = 8.99e9  # Coulomb's constant\nq1 = 1e-6  # Charge 1\nq2 = -1e-6  # Charge 2\nd = 0.1  # Distance between fixed charges\nh = 0.05  # Initial displacement of movable charge\nm = 0.1  # Mass of movable charge\n\n# Objects\nfixed_charge1 = sphere(pos=vector(-d/2, 0, 0), radius=0.02, color=color.red)\nfixed_charge2 = sphere(pos=vector(d/2, 0, 0), radius=0.02, color=color.blue)\nmovable_charge = sphere(pos=vector(d/2 + h, 0, 0), radius=0.02, color=color.green, make_trail=True)\nspring = helix(pos=fixed_charge1.pos, axis=movable_charge.pos - fixed_charge1.pos, radius=0.01)\n\n# Initial conditions\nmovable_charge.velocity = vector(0, 0, 0)\nmovable_charge.acceleration = vector(0, 0, 0)\n\n# Time variables\nt = 0\ndt = 0.01\n\n# Simulation loop\nwhile True:\n    rate(100)\n    \n    r1 = movable_charge.pos - fixed_charge1.pos\n    r2 = movable_charge.pos - fixed_charge2.pos\n    \n    F1 = k * q1 * q2 * r1 / mag(r1)**3\n    F2 = k * q1 * q2 * r2 / mag(r2)**3\n    \n    F_net = F1 + F2\n    movable_charge.acceleration = F_net / m\n    movable_charge.velocity += movable_charge.acceleration * dt\n    movable_charge.pos += movable_charge.velocity * dt\n    \n    spring.axis = movable_charge.pos - fixed_charge1.pos",
      "mode": "initial",
      "timestamp": "2024-12-26 19:46:45",
      "serial_number": 1
    }
  ]
}