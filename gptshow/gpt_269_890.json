{
  "session_id": 890,
  "log": [
    {
      "input": "Please create a Vpython animation for \"Horizontal Projectile Motion.\"\n\nThere is a floor with a length of 25. A ball with a radius of 1 is thrown horizontally from a height of 15 with an initial speed of 5. Assuming an elastic collision between the ball and the floor, and considering only gravity, the ball accelerates downward due to gravity and bounces upon hitting the ground. After colliding with the floor, the ball moves to the position (25,13,0) and then stops. The trajectory of the ball's motion should be illustrated.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=0.5\n\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Initialize variables\nRadius_I = 0.5\nfloor_length = 25\ninitial_speed = 5\ninitial_height = 15\ng = 9.8\n\n# Create objects\nfloor = box(pos=vector(floor_length/2, 0, 0), size=vector(floor_length, 0.01, 10), color=color.green)\nball = sphere(pos=vector(0, initial_height, 0), radius=Radius_I, color=color.red)\nball.velocity = vector(initial_speed, 0, 0)\n\n# Time step\ndt = 0.01\n\n# Simulation loop\nwhile True:\n    rate(100)\n    \n    # Update position and velocity\n    ball.pos = ball.pos + ball.velocity*dt\n    ball.velocity.y = ball.velocity.y - g*dt\n    \n    # Check for collision with the floor\n    if ball.pos.y < Radius_I and ball.velocity.y < 0:\n        ball.velocity.y = -ball.velocity.y\n    \n    # Stop the ball\n    if ball.pos.x >= floor_length:\n        ball.velocity = vector(0, 0, 0)\n        ball.pos = vector(25, 13, 0)\n        break",
      "mode": "initial",
      "timestamp": "2024-07-31 10:55:29",
      "serial_number": 1
    }
  ]
}