{
  "session_id": 843,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and the height to 400. Please plot the trajectory of the ball. Do not adjust the size of the scene. The center point of the canvas must be correctly set, so the order of writing the Parameter Settings in the program should be after the Screen Settings.\n\n2. Object Motion & Parameter Settings\nPlease draw a VPython animation of a ball being thrown horizontally: the ball is thrown horizontally, hits the floor, and bounces.\nDraw the ball and the floor. Assume that the ball undergoes an elastic collision with the ground, considering only the effect of gravity, i.e., the ball accelerates downward under the influence of gravity and bounces upon hitting the ground. Allow the ball to move for 5 seconds then stop the motion.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Speed_I as a cyber input variable, set Speed_I=5.\n\n(2) Speed_I is the horizontal velocity of the ball. When Speed_I changes to a new value during the animation, the horizontal velocity of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400, center=vector(0,0,0))\n\n# Parameter Settings\ng = 9.8\ndt = 0.01\nt = 0\nSpeed_I = 5\n\n# Objects\nfloor = box(pos=vector(0,-5,0), length=30, height=0.2, color=color.green)\nball = sphere(pos=vector(-10,0,0), radius=1, color=color.red)\n\nball.velocity = vector(Speed_I,0,0)\n\nwhile t < 5:\n    rate(100)\n    ball.velocity.y = ball.velocity.y - g*dt\n    ball.pos = ball.pos + ball.velocity*dt\n    if ball.pos.y < floor.pos.y + 1:\n        ball.velocity.y = -ball.velocity.y\n    t = t + dt",
      "mode": "initial",
      "timestamp": "2024-08-15 20:52:50",
      "serial_number": 1
    }
  ]
}