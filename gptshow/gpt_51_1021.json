{
  "session_id": 1021,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\"># **Horizontal Projectile Motion**\n\nA small ball is launched horizontally from a height \\( h \\) with an initial velocity \\( v_0 \\). The ball accelerates downward under the influence of gravity and bounces upon hitting the ground.\nOnly the effect of gravity is considered, and the collision between the ball and the ground is elastic.</span>\n\n3. Cyber Input Variable Mapping Information:\n    (1) height is mapped to the variable named Height_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Height_I changes, let the animation rerun to the starting point and start with the updated height.\n    ",
      "output": "from vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Constants\ng = 9.81  # acceleration due to gravity (m/s^2)\nball_radius = 0.5\n\n# Objects\nground = box(pos=vector(0, -5, 0), size=vector(20, 0.2, 10), color=color.green)\nball = sphere(pos=vector(0, 5, 0), radius=ball_radius, color=color.red, make_trail=True)\n\n# Parameters\nheight = 5  # initial height of the ball\nvelocity = 10  # initial horizontal velocity of the ball\n\n# Motion Setup\nball.velocity = vector(velocity, 0, 0)\nball.acceleration = vector(0, -g, 0)\nt = 0\ndt = 0.01\n\n# Animation Loop\ndef reset_animation():\n    global height\n    ball.pos = vector(0, height, 0)\n    ball.velocity = vector(velocity, 0, 0)\n    ball.acceleration = vector(0, -g, 0)\n\ndef update_height():\n    global height\n    height = Height_I.value\n    reset_animation()\n\ndef update_animation():\n    while ball.pos.y > ball_radius:\n        rate(100)\n        ball.pos += ball.velocity * dt\n        ball.velocity += ball.acceleration * dt\n        t += dt\n    ball.velocity.y = -ball.velocity.y  # reverse the direction upon bouncing\n\n# Event Handling\nHeight_I = slider(min=1, max=10, value=5, step=0.5, bind=update_height)\n\nwhile True:\n    update_animation()",
      "mode": "initial",
      "timestamp": "2024-09-23 22:00:02",
      "serial_number": 1
    }
  ]
}