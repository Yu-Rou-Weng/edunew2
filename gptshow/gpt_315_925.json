{
  "session_id": 925,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and the height to 400. Please draw the trajectory of the moving ball. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of a ball being horizontally projected: a ball is thrown horizontally from mid-air, hits the ground, and bounces. Draw the ball and the ground. Assume that the ball undergoes an elastic collision with the ground, only considering the effects of gravity, meaning the ball accelerates downward under gravity and bounces upon hitting the ground. Let the ball stop moving after 10 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a Cyber Input Variable named Speed_I with an initial value set to 1. This variable represents the speed of the ball.\n\n(2) During the animation, whenever the value of the Speed_I variable changes, let the animation rerun from the starting point and start with the updated ball speed.\n\n(3) Define and initialize a Cyber Input Variable named Height_I with an initial value set to 15. This variable represents the height of the ball above the ground.\n\n(4) During the animation, whenever the value of the Height_I variable changes, let the animation rerun from the starting point and start with the updated height of the ball above the ground.\n(5) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400)\n\n# Cyber Input Variable Mapping Information\nSpeed_I = 1\nHeight_I = 15\n\n# Variable definitions\ng = 9.8\nt = 0\ndt = 0.01\n\n# Object Motion & Parameter Settings\nfloor = box(size=vector(10,0.2,10), color=color.green)\nball = sphere(pos=vector(0,Height_I,0), radius=0.5, color=color.red, make_trail=True)\nball.velocity = vector(Speed_I,0,0)\n\nwhile t < 10:\n    rate(100)\n    ball.pos = ball.pos + ball.velocity*dt\n    \n    if ball.pos.y < ball.radius:\n        ball.velocity.y = abs(ball.velocity.y)\n    else:\n        ball.velocity.y = ball.velocity.y - g*dt\n    \n    Speed_I = ball.velocity.x\n    Height_I = ball.pos.y\n    \n    t = t + dt",
      "mode": "initial",
      "timestamp": "2024-08-18 20:19:52",
      "serial_number": 1
    }
  ]
}