{
  "session_id": 1183,
  "log": [
    {
      "input": "### One-Dimensional Elastic Collision with Spring SystemOne-dimensional elastic collision, as covered in Chapter 4 of Mechanics 2 (old syllabus, Basic Physics 2B final chapter), describes a scenario where two small balls with masses \\( m_1 \\) and \\( m_2 \\), and initial velocities \\( v_1 \\) and \\( v_2 \\), respectively, collide on a frictionless horizontal surface. After the collision, their velocities change to \\( v_1' \\) and \\( v_2' \\). The system conserves momentum since no external forces are involved.If the collision is perfectly elastic, the total kinetic energy of the two balls remains constant before and after the collision:\\[m_1 v_1^2 + m_2 v_2^2 = m_1 v_1'^2 + m_2 v_2'^2\\]By solving the system of equations for momentum and energy conservation, we get the following formulas for the velocities after the collision:\\[v_1' = \\frac{(m_1 - m_2)}{(m_1 + m_2)} v_1 + \\frac{2 m_2}{(m_1 + m_2)} v_2\\]\\[v_2' = \\frac{2 m_1}{(m_1 + m_2)} v_1 + \\frac{(m_2 - m_1)}{(m_1 + m_2)} v_2\\]---#### One-Dimensional Elastic Collision Process with SpringThis process involves introducing an ideal spring between the two blocks, serving as a buffer during the collision. The system is simulated to visualize the full collision dynamics, including the spring compression and rebound. The spring introduces an additional layer of physical interaction, damping the impact and allowing for a smooth transition during the collision.The simulation captures the position and velocity of each block during the collision, and the velocity-time graph demonstrates the changes in motion as the blocks interact with each other and the spring.",
      "output": "from vpython import *\n\nscene.width = 800\nscene.height = 400\n\nground = box(pos=vector(0, -0.05, 0), size=vector(10, 0.1, 1), color=color.blue)\nblock1 = box(pos=vector(-3, 0.05, 0), size=vector(0.5, 0.1, 0.1), color=color.red, v=vector(1, 0, 0), m=1)\nblock2 = box(pos=vector(3, 0.05, 0), size=vector(0.5, 0.1, 0.1), color=color.green, v=vector(-1, 0, 0), m=2)\n\nspring = helix(pos=vector(-1.5, 0, 0), axis=vector(3, 0, 0), radius=0.2, thickness=0.1)\n\nk = 20\n\nwhile True:\n    rate(100)\n    \n    spring.axis = block2.pos - block1.pos\n    \n    if mag(spring.axis) > 2.5:\n        f = k * (mag(spring.axis) - 2.5) * spring.axis.norm()\n    else:\n        f = vector(0, 0, 0)\n    \n    block1.v += f / block1.m\n    block2.v -= f / block2.m\n    \n    block1.pos += block1.v * 0.01\n    block2.pos += block2.v * 0.01",
      "mode": "initial",
      "timestamp": "2024-12-26 18:54:28",
      "serial_number": 1
    }
  ]
}