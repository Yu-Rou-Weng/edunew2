{
  "session_id": 968,
  "log": [
    {
      "input": "1. Screen Settings:\nSet the canvas width to 700 and height to 400. Do not change the canvas size.\n\n2.  Object Motion & Parameter Settings:\nCreate a VPython animation to illustrate the following physics experiment:\nHorizontal projectile motion refers to the process in which an object is thrown horizontally from a certain height and moves along a curved path under the influence of gravity. When the ball hit the ground, it bounces back. The ball should stop moving after 6 seconds. \n\n3. Cyber Input Variable Mapping Information:\n\n(1) initial velocity is mapped to the variable named Velocity_I with an initial value set to 4.\n(2) When the value of Velocity_I changes, let the animation rerun to the starting point and start with the updated initial velocity.\n\n(3) launch angle is mapped to the variable named Angle_I with an initial value set to 9.\n(4) When the value of Angle_I changes, let the animation rerun to the starting point and start with the updated launch angle.\n",
      "output": "{\"controllable_variables\": [\"angle\", \"velocity\"]}",
      "mode": "initial",
      "timestamp": "2024-09-01 19:26:12",
      "serial_number": 1
    },
    {
      "input": "Screen Settings:\nSet the canvas width to 700 and height to 400. Do not change the canvas size.\n\nObject Motion & Parameter Settings:\nCreate a VPython animation to illustrate the following physics experiment:\nHorizontal projectile motion refers to the process in which an object is thrown horizontally from a certain height and moves along a curved path under the influence of gravity. When the ball hit the ground, it bounces back. The ball should stop moving after 6 seconds.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) initial_velocity is mapped to the variable named Gravity_I with an initial value set to 5.\n(2) When the value of Gravity_I changes, let the animation rerun to the starting point and start with the updated initial_velocity.\n",
      "output": "```python\nfrom vpython import *\n\n# Screen Settings\ncanvas(width=700, height=400)\n\n# Object Motion & Parameter Settings\nground = box(pos=vector(0, -5, 0), size=vector(20, 0.1, 10), color=color.green)\nball = sphere(pos=vector(-10, 0, 0), radius=0.5, color=color.red, make_trail=True)\n\nGravity_I = 5\ninitial_velocity = vector(Gravity_I, 0, 0)\nball.velocity = initial_velocity\ng = vector(0, -9.81, 0)  # acceleration due to gravity\n\ndt = 0.01\nt = 0\n\nwhile t < 6:\n    rate(100)\n    ball.pos += ball.velocity * dt\n    ball.velocity += g * dt\n\n    if ball.pos.y < ball.radius:\n        ball.velocity.y = -ball.velocity.y\n\n    t += dt\n```",
      "mode": "initial",
      "timestamp": "2024-09-02 20:41:07",
      "serial_number": 1
    }
  ]
}