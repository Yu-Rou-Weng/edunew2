{
  "session_id": 848,
  "log": [
    {
      "input": "1. Screen Settings\nSet the canvas width to 700 and the height to 400. Please draw the trajectory of the ball's movement. Do not adjust the size of the scene. The center point of the canvas must be correctly set; therefore, the writing order of the Parameter Settings must be after the Screen Settings.\n\n2. Object Motion & Parameter Settings\nPlease create a VPython animation of a horizontally thrown ball: A ball is thrown horizontally, hits the floor, and bounces. Draw the ball and the floor. Assume that the ball undergoes an elastic collision with the ground, considering only the effect of gravity\u2014meaning the ball accelerates downward under gravity and bounces upon hitting the ground. Allow the ball to move for 5 seconds and then stop.\n\n3. Cyber Input Variable Mapping Information:\nDefine and initialize a network input variable named Speed_I with an initial value set to 5. This variable represents the horizontal speed of the ball.\n\nKey Requirement: During the animation process, when the value of the Speed_I variable changes, the horizontal speed of the ball should be immediately updated to the new value of Speed_I. Ensure that the program can respond in real-time to changes in Speed_I and adjust the ball\u2019s motion speed accordingly.\n(1) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400, center=vector(0,-0.2,0))\n\n# Object Motion & Parameter Settings\nball = sphere(pos=vector(-5,0,0), radius=0.5, color=color.cyan, make_trail=True)\nfloor = box(pos=vector(0,-0.05,0), length=10, height=0.1, width=10, color=color.green)\nball.velocity = vector(5,0,0)\ng = vector(0,-9.8,0)\nt = 0\ndt = 0.01\nT = 5\n\n# Cyber Input Variable Mapping Information\nSpeed_I = 5\n\nwhile t < T:\n    rate(100)\n    if ball.pos.y <= floor.pos.y + ball.radius and ball.velocity.y < 0:\n        ball.velocity.y = -ball.velocity.y\n    else:\n        ball.velocity.y = ball.velocity.y + g.y*dt\n    ball.velocity.x = Speed_I\n    ball.pos = ball.pos + ball.velocity*dt\n    t = t + dt",
      "mode": "initial",
      "timestamp": "2024-08-15 23:17:16",
      "serial_number": 1
    }
  ]
}