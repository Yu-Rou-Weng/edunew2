{
  "session_id": 806,
  "log": [
    {
      "input": "# Electron Charge-to-Mass Ratio\n\nThe experimental setup for measuring the electron charge-to-mass ratio is illustrated below. The appearance and velocity selector are very similar; hence, we slightly modify the program for the velocity selector to create an animation for the electron charge-to-mass ratio experiment.\n### Schematic Diagram of the Experimental Setup\n![image](https://hackmd.io/_uploads/SkTFu36OR.png)\n\n## Theoretical Analysis\n\nRefer to the diagram above, where the particle has mass $m$ and charge $q$, and enters a uniform downward electric field $E$ with a horizontal velocity $v_0$ to the right. The length of the parallel charged plates is $L$, and the distance between the right side of the plates and the screen is $D$. Considering only the electrostatic force, the acceleration of the particle in the electric field upwards is\n$$\na = \\frac{qE}{m}\n$$\n\nAs there are no external forces in the horizontal direction, the particle moves at a constant velocity, thus the time it spends in the electric field is\n$$\nt_1 = \\frac{L}{v_0}\n$$\n\nThe upward displacement is\n$$\ny_1 = \\frac{1}{2} a t_1^2 = \\frac{1}{2} \\left( \\frac{qE}{m} \\right) \\left( \\frac{L}{v_0} \\right)^2\n$$\n\nThe upward velocity of the particle upon leaving the electric field is\n$$\nv_{y1} = a t_1 = \\frac{qEL}{mv_0}\n$$\n\nThe particle moves in a straight line at constant velocity outside the electric field, and the time it moves outside the electric field is\n$$\nt_2 = \\frac{D}{v_0}\n$$\n\nThe upward displacement is\n$$\ny_2 = v_{y1} t_2 = \\left( \\frac{qEL}{mv_0} \\right) \\left( \\frac{D}{v_0} \\right) = \\frac{qELD}{mv_0^2}\n$$\n\nThe total upward displacement is\n$$\ny = y_1 + y_2 = \\frac{qE}{2m} \\left( \\frac{L^2}{v_0^2} \\right) + \\frac{qELD}{mv_0^2} = \\frac{qEL(L + 2D)}{2mv_0^2}\n$$\n\nThe charge-to-mass ratio of the charged particle is\n$$\n\\frac{q}{m} = \\frac{2yv_0^2}{E L (L + 2D)}\n$$\n\nThe magnitude of the electric field can be determined by the voltage and distance between the parallel charged plates, and the initial velocity $v_0$ can be controlled by the velocity selector. Therefore, in the experiment, all data except the charge-to-mass ratio are measurable.\n\nPlease write a Vpython program for \"Electron Charge-to-Mass Ratio\":\n\nAt (0,5,0) and (0,-5,0), there are two horizontal, parallel blue charged plates, each 10 cm long. At (10,0,0), there is a blue charged plate with a height of 10 cm and a width along the z-axis of 5 cm. A green arrow representing the electric field points from (-5,5,0) to (-5,-5,0), labeled as \"E.\" The electric field exists only between the two parallel blue charged plates.\n\nA red particle starts from (0,0,0). This particle is a small red sphere with a radius of 0.005, influenced by the electric field between the two parallel blue charged plates, and begins its motion in the electron charge-to-mass ratio along the horizontal line, stopping when it hits the charged blue plate. Please draw the trajectory of the red particle's movement. The red particle stops moving when it reaches the position (7,0,0) after passing through the gap between the two baffles.\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not scale down the scene.\n(4) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\nscene = canvas(width = 800, height = 800, center = vector(5,0,0), background = vector(0.5,0.5,0))\n\nq, m = 1.6E-19, 9.1E-31 # charge and mass of the electron\nE = vector(0, -1, 0) * 3000 # electric field\nv0 = vector(3E6, 0, 0) # velocity of the electron\nL, D = 1, 10 # dimensions of the experimental setup\n\n# Create the charged plates\nplate1 = box(pos = vector(0.5*L, 0, 0), size = vector(L, 0.05, 0.7), color = color.blue)\nplate2 = box(pos = vector(0.5*L, -0.5, 0), size = vector(L, 0.05, 0.7), color = color.blue)\nplate3 = box(pos = vector(L+D, 0, 0), size = vector(0.05, 1, 0.7), color = color.blue)\n\n# Create the electric field arrow\nEfield = arrow(pos = vector(-0.5*L, 0.5, 0), axis = vector(0, -1, 0), color = color.green, shaftwidth = 0.1)\n\n# Create the labels\nlabel(pos=Efield.pos, text='E', xoffset=-15, yoffset=25, space=30, height=16, border=4, font='sans')\n\n# Create the electron\nRadius_I = 1 # user input\nelectron = sphere(pos = vector(0, 0, 0), radius = 0.005*Radius_I, color = color.red, v = v0, a = q/m*E, make_trail = True)\n\n# Time parameters\nt, dt = 0, 1E-11\n\n# Animation loop\nwhile electron.pos.x < L:\n    rate(100)\n    electron.v += electron.a*dt\n    electron.pos += electron.v*dt\n    t += dt\n\nelectron.a = vector(0, 0, 0)\n\nwhile electron.pos.x < L+D:\n    rate(100)\n    electron.pos += electron.v*dt\n    t += dt\n\nelectron.v = vector(0, 0, 0)",
      "mode": "initial",
      "timestamp": "2024-07-26 02:00:37",
      "serial_number": 1
    }
  ]
}