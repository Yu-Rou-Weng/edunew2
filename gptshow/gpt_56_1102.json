{
  "session_id": 1102,
  "log": [
    {
      "input": "1. Screen Settings:</br>Set the canvas width to 700 and height to 400. Do not change the canvas size.</br>2. Object Motion & Parameter Settings:</br>Create a VPython animation to illustrate the following physics experiment:<br><span style=\"color:red;\"># **Horizontal Projectile Motion**\n\nA small ball is launched horizontally from a height \\( h \\) with an initial velocity \\( v_0 \\). The ball accelerates downward under the influence of gravity and bounces upon hitting the ground.\nOnly the effect of gravity is considered, and the collision between the ball and the ground is elastic.</span></br></br>3. Cyber Input Variable Mapping Information:\n    (1) initial_height is mapped to the variable named Height_I with an initial value set to a 1-dimensional value 5\n    (2) When the value of Height_I changes, let the animation rerun to the starting point and start with the updated initial_height.",
      "output": "Sure! Here is the VPython code that illustrates the physics experiment of Horizontal Projectile Motion as described:\n\n```python\nfrom vpython import *\n\n# Screen Settings\nscene = canvas(width=700, height=400)\nfloor = box(pos=vector(0, -0.1, 0), size=vector(10, 0.2, 5), color=color.green)\n\n# Object Motion & Parameter Settings\nball = sphere(pos=vector(0, 5, 0), radius=0.5, color=color.blue)\ninitial_height = 5\ninitial_velocity = 10\ngravity = 9.81\ntime_interval = 0.01\n\ndef launch_projectile():\n    t = 0\n    ball.pos.y = initial_height\n    ball.velocity = vector(initial_velocity, 0, 0)\n    \n    while ball.pos.y >= ball.radius:\n        rate(100)\n        ball.pos.x += ball.velocity.x * time_interval\n        ball.pos.y = initial_height - 0.5 * gravity * t**2\n        t += time_interval\n        \n        if ball.pos.y < ball.radius:\n            ball.velocity.y *= -1  # Elastic collision with the ground\n\nwhile True:\n    launch_projectile()\n```\n\nIn this code:\n- The screen size is set to 700x400 pixels with a green floor representing the ground.\n- The ball is launched from an initial height `initial_height` with an initial velocity `initial_velocity`. The ball moves horizontally with a constant velocity and accelerates downward due to gravity.\n- The animation continuously runs the `launch_projectile` function, which updates the position of the ball based on the physics of horizontal projectile motion.\n\nIf you update the `initial_height` variable, the animation will rerun with the new initial height value.",
      "mode": "initial",
      "timestamp": "2024-09-24 10:16:48",
      "serial_number": 1
    }
  ]
}