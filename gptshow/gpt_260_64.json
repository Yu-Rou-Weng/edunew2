{
  "session_id": 64,
  "log": [
    {
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of the torque $\\tau$ and the angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom which we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the oscillation, therefore the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, calculating the motion process and period with a changing initial swing angle.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython such as numpy, math and time",
      "output": "from vpython import *\n\n# Define the variables\nLength_I = 10\nRadius_I = 1\ng = 9.8\n\n# Create the pendulum\nceiling = box(length=0.2, height=0.2, width=2, color=color.blue)\nball = sphere(pos=vector(0,-Length_I,0), radius=Radius_I, color=color.red)\nstring = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.05, color=color.yellow)\n\n# Define the initial conditions\nball.v = vector(0,0,0)\nball.m = 1\nball.theta = 0.1\nball.omega = 0\ndeltat = 0.01\n\n# Calculate the motion\nwhile True:\n    rate(100)\n    alpha = -g/Length_I*sin(ball.theta) # calculate the angular acceleration\n    ball.omega = ball.omega + alpha*deltat # update the angular velocity\n    ball.theta = ball.theta + ball.omega*deltat # update the angle\n    ball.pos = vector(Length_I*sin(ball.theta), -Length_I*cos(ball.theta), 0) # update the position\n    string.axis = ball.pos - string.pos # update the string length",
      "mode": "initial",
      "timestamp": "2024-07-08 17:37:25",
      "serial_number": 1
    }
  ]
}