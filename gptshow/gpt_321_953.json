{
  "session_id": 953,
  "log": [
    {
      "input": "1. Screen Settings:\nSet the canvas width to 700 and the height to 400. Do not change the canvas size.\n\n2. Object Motion & Parameter Settings:\nPlease create a Vpython animation of simple harmonic motion:\nDraw a block, a spring, and a wall. On a horizontal, smooth surface, there is a block connected to the wall on the left with an elastic spring. Pull the block to the right for a certain distance and then release it from rest, allowing the block and spring to perform simple harmonic motion.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Speed_I as a cyber input variable, set Speed_I=0.\n\n(2) Speed_I is the initial velocity of the block. When Speed_I changes to a new value, the initial velocity of the block also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Screen Settings\nscene.width = 700\nscene.height = 400\n\n# Parameters\nmass = 1\nk = 1\namplitude = 1\nSpeed_I = 0  # Initial velocity of the block\n\n# Objects\nwall = box(pos=vector(-1.2, 0, 0), size=vector(0.2, 0.6, 0.6), color=color.blue)\nspring = helix(pos=wall.pos, color=color.orange, thickness=0.05, coils=20, radius=0.2)\nblock = box(pos=vector(0, 0, 0), velocity=vector(Speed_I, 0, 0), size=vector(0.2, 0.2, 0.2), color=color.red)\n\n# Animation\nt = 0\ndt = 0.01\nwhile True:\n    rate(100)\n    block.pos.x = amplitude * cos(sqrt(k/mass) * t)  # Simple harmonic motion equation\n    spring.axis = block.pos - wall.pos  # Update spring size\n    t += dt",
      "mode": "initial",
      "timestamp": "2024-08-20 17:07:07",
      "serial_number": 1
    }
  ]
}