{
  "session_id": 950,
  "log": [
    {
      "input": "1. Screen Settings:\nSet the canvas width to 700 and height to 400. Do not change the size of the canvas.\n\n2. Object Motion & Parameter Settings:\nPlease draw a Vpython animation of simple harmonic motion:\nDraw a block, a spring, and a wall. On a horizontal smooth table, there is a block connected to the wall on the left side by an elastic spring. Pull the block to the right a certain distance and then release it from rest, allowing the block and the spring to perform simple harmonic motion.\n\n3. Cyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Speed_I as a cyber input variable, set Speed_I=0\n\n(2) Speed_I is the initial velocity of the block. When Speed_I changes to a new value, the initial velocity of the block also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\n# Initialize cyber input variable\nSpeed_I = 0\n\n# Create a canvas\nscene = canvas(width=700, height=400)\n\n# Create the wall, block, and spring\nwall = box(pos=vector(-0.2,0,0), size=vector(0.2,0.6,0.6), color=color.blue)\nblock = box(pos=vector(1,0,0), velocity=vector(Speed_I,0,0), size=vector(0.2,0.2,0.2), mass=1, color=color.red)\nspring = helix(pos=wall.pos, axis=block.pos-wall.pos, color=color.yellow, thickness=0.01, coils=20, radius=0.1)\n\n# Create an animation loop\nwhile True:\n    rate(100)\n    # Calculate the spring force\n    spring_force = -1 * (block.pos - wall.pos)\n    # Update the block's velocity\n    block.velocity = block.velocity + spring_force/block.mass\n    # Update the block's position\n    block.pos = block.pos + block.velocity\n    # Update the spring's position\n    spring.axis = block.pos - wall.pos",
      "mode": "initial",
      "timestamp": "2024-08-19 15:03:58",
      "serial_number": 1
    }
  ]
}