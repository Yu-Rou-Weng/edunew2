{
  "session_id": 821,
  "log": [
    {
      "input": "Please write the Vpython code for \"Simple Harmonic Motion Caused by Electrostatic Forces (Placed Above the Plumb Line)\"\n\n## Electrostatic Force Formula\n\nThe electrostatic force \\( F \\) is calculated from the Coulomb force between two charged particles. In this code, the electrostatic force is calculated using the following formula:\n\n$$\nF = \\frac{k \\cdot Q \\cdot q}{r^2}\n$$\n\nWhere:\n- \\( k \\) is the electrostatic constant, set in the code as $8.988 \\times 10^{9} \\ \\text{N\u00b7m}^2/\\text{C}^2$\n- \\( Q \\) is the charge of the blue sphere, please set in the code as $1 \\times 10^{-10}$\n- \\( q \\) is the charge of the red sphere, please set in the code as $-1 \\times 10^{3}$\n- \\( r \\) is the distance between the two charged particles.\n\nThe calculation part of the electrostatic force in the code is shown below:\n- `r1`: Vector, representing the displacement vector between the small ball (`ball`) and the left blue sphere (`s1`).\n- `r2`: Vector, representing the displacement vector between the small ball (`ball`) and the right blue sphere (`s2`).\n- `ball`: Represents the movable small ball object, initially located at \\( (0, 0, 0) \\), with properties such as mass, velocity, and acceleration.\n- `s1`: Represents the left fixed position blue sphere, located at \\( (-10, 0, 0) \\).\n- `s2`: Represents the right fixed position blue sphere, located at \\( (10, 0, 0) \\).\n- `F1`: Vector, representing the electrostatic force on the small ball (`ball`) from the blue sphere (`s1`).\n- `F2`: Vector, representing the electrostatic force on the small ball (`ball`) from the blue sphere (`s2`).\n- `F`: Vector, representing the total electrostatic force on the small ball (`ball`), which is the resultant force of `F1` and `F2`.\n\nr1 = ball.pos - s1.pos\nr2 = ball.pos - s2.pos\nF1 = (k*Q*q) / r1.mag2 * r1.norm()\nF2 = (k*Q*q) / r2.mag2 * r2.norm()\nF = F1 + F2\n\nAt positions (-10, 0, 0) and (10, 0, 0), there are blue spheres with a radius of 1, positively charged and fixed in place. At position (0, 3, 0) there is a small sphere with a radius of 0.3, negatively charged, with an initial velocity of (0,0,0), and it begins to move due to the electrostatic forces from the two blue spheres. There is a yellow line connecting the two blue spheres. At positions (0, 3, 0) and (0, -3, 0) there are two white horizontal lines each with a length of 5.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(2) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(3) Do not import packages that are not supported by VPython such as numpy, math, sympy, scipy and time.",
      "output": "from vpython import *\n\nscene = canvas()\n\n# Constants\nk = 8.988e9\nQ = 1e-10\nq = -1e3\nm = 1e-3\n\n# Objects\ns1 = sphere(pos=vec(-10, 0, 0), radius=1, color=color.blue)\ns2 = sphere(pos=vec(10, 0, 0), radius=1, color=color.blue)\nRadius_I = 1\nball = sphere(pos=vec(0, 3, 0), radius=Radius_I, color=color.red, make_trail=True, m=m, v=vec(0, 0, 0))\nrod1 = cylinder(pos=vec(-10, 0, 0), axis=vec(20, 0, 0), radius=0.02, color=color.yellow)\nrod2 = cylinder(pos=vec(0, 3, 0), axis=vec(0, -5, 0), radius=0.02, color=color.white)\nrod3 = cylinder(pos=vec(0, -3, 0), axis=vec(0, 5, 0), radius=0.02, color=color.white)\n\n# Time\nt = 0\ndt = 0.001\n\nwhile True:\n    rate(1000)\n    r1 = ball.pos - s1.pos\n    r2 = ball.pos - s2.pos\n    F1 = k*Q*q / r1.mag2 * r1.norm()\n    F2 = k*Q*q / r2.mag2 * r2.norm()\n    F = F1 + F2\n    ball.v += F/ball.m * dt\n    ball.pos += ball.v * dt\n    ball.radius = Radius_I\n    t += dt",
      "mode": "initial",
      "timestamp": "2024-07-26 09:20:59",
      "serial_number": 1
    }
  ]
}