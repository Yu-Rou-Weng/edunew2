{
  "session_id": 1,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-07 14:21:21",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs included:\n\n1. An ideal simple pendulum, where changes in the initial swing angle are used to calculate the motion and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.But, you need to add something that causes runtime error in your code such as:new_value is not defined At or near line 30: Radius_I = new_value # new_value should be updated based on the new input",
      "output": "from vpython import *\n\n# Constants\ng = 9.8\ntheta0 = 0.2\nLength_I = 10\nRadius_I = 1\n\n# Create objects\nceiling = box(pos=vector(0,0,0), size=vector(0.2,0.01,0.2), color=color.blue)\nball = sphere(pos=vector(Length_I*sin(theta0), -Length_I*cos(theta0), 0), radius=Radius_I, color=color.red)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01, color=color.blue)\n\n# Initial values\nball.v = vector(0, 0, 0)\nball.m = 1\nt = 0\ndt = 0.01\n\n# Update ball position\nwhile True:\n    rate(100)\n    \n    # Update values\n    ball.a = vector(0, -g*sin(ball.pos.mag/Length_I), 0)\n    ball.v = ball.v + ball.a*dt\n    ball.pos = ball.pos + ball.v*dt\n    t = t + dt\n    \n    # Update rod\n    rod.axis = ball.pos - rod.pos",
      "mode": "initial"
    }
  ]
}