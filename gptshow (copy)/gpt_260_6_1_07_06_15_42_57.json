{
  "session_id": 6,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-06 15:42:57",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
      "output": "from vpython import *\n\nLength_I = 10 # Define and initialize Length_I\nRadius_I = 1 # Define and initialize Radius_I\n\n# Create 3D objects\nceiling = box(length=0.2, height=0.01, width=0.2, color=color.blue) # the ceiling\nball = sphere(radius = Radius_I, color=color.red) # the ball\nstring = cylinder(radius=0.005) # the string\n\ng = 9.8 # gravity\ntheta = 5*pi/180 # initial angle\nball.m = 1 # mass of the ball\nball.v = 0 # initial angular velocity\nball.pos = vector(Length_I*sin(theta), -Length_I*cos(theta), 0) # initial position\nstring.pos = ceiling.pos # initial position of the string\nstring.axis = ball.pos - string.pos # initial axis of the string\n\n# time parameters\nt = 0\ndt = 0.001\n\n# Motion calculations\nwhile True:\n    rate(1000)\n    ball.a = vector(0, -g*sin(theta), 0) # acceleration\n    ball.v += ball.a*dt # update velocity\n    ball.pos = ball.v*dt + ball.pos # update position\n    string.axis = ball.pos - string.pos # update string axis\n    theta = atan(ball.pos.y/ball.pos.x) if ball.pos.x != 0 else (pi/2 if ball.pos.y > 0 else -pi/2) # update theta\n    t += dt\n\n    # Update Length_I and Radius_I\n    if Length_I != string.axis.mag:\n        dL = Length_I - string.axis.mag # difference in length\n        ball.pos = (string.axis.norm() * Length_I) + string.pos # update ball position\n        string.axis = ball.pos - string.pos # update string axis\n    if Radius_I != ball.radius:\n        ball.radius = Radius_I # update ball radius",
      "mode": "initial"
    }
  ]
}