{
  "session_id": 1,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-06 16:07:31",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and the angular acceleration $\\alpha$ are in opposite directions, the relationship between them is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
      "output": "from vpython import *\n\n# Constants\ng = 9.81 \nLength_I = 10\nRadius_I = 1\ntheta_0 = 5 * pi / 180 \n\n# Create visual objects \nceiling = box(pos=vector(0,0,0), length=0.2, height=0.01, width=0.2, color=color.blue) \nball = sphere(pos=vector(Length_I * sin(theta_0), -Length_I * cos(theta_0), 0), radius=Radius_I, color=color.red) \nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01, color=color.blue)\n\n# Initialize variables\nball.theta = theta_0\nball.omega = 0 \ndt = 0.001\nt = 0\n\ndef update_system(ball, dt):\n    '''Update the system by one time step.'''\n    alpha = -g/Length_I * sin(ball.theta)  \n    ball.omega += alpha*dt\n    ball.theta += ball.omega*dt \n    ball.pos = vector(Length_I * sin(ball.theta), -Length_I * cos(ball.theta), 0)\n    rod.axis = ball.pos - rod.pos \n\n# Animation loop\nwhile t < 10:\n    rate(1000)\n    update_system(ball, dt)\n    t += dt",
      "mode": "initial"
    }
  ]
}