{
  "session_id": 1,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-06 16:11:49",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the oscillation, therefore the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
      "output": "from vpython import *\n\n# Constants\ng = 9.8 # m/s^2\ntheta_0 = 5 # initial angle in degrees\ntheta_0 = radians(theta_0) # convert to radians\n\n# Cyber input variables\nLength_I = 10 # length of the pendulum\nRadius_I = 1 # radius of the ball\n\n# Create pendulum\nceiling = box(pos=vector(0,0,0), length=0.2, height=0.01, width=0.2)\nball = sphere(pos=vector(Length_I*sin(theta_0), -Length_I*cos(theta_0), 0), radius=Radius_I, color=color.blue)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01)\n\n# Initialize motion\nball.v = vector(0, 0, 0)\nt = 0\ndt = 0.01\n\n# time loop\nwhile True:\n    rate(100) # limit to 100 iterations per second\n\n    # calculate forces\n    tension = ball.mass * g * cos(theta_0) # tension in the string\n    gravity = vector(0, -ball.mass * g, 0) # force of gravity\n    net_force = tension + gravity\n\n    # update velocity and position\n    ball.v += net_force/ball.mass * dt\n    ball.pos += ball.v * dt\n\n    # update time\n    t += dt\n\n    # update rod\n    rod.axis = ball.pos - rod.pos\n\n    # check for one full oscillation\n    if ball.pos.y > 0 and ball.v.y > 0:\n        print(\"Period = \", 2*t) # print period\n        break # exit loop",
      "mode": "initial"
    }
  ]
}