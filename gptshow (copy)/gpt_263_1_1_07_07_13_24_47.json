{
  "session_id": 1,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-07 13:24:47",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. Ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. Simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I = 10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I = 1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Add something that causes runtime error in your code such as:new_value is not defined At or near line 30: Radius_I = new_value # new_value should be updated based on the new input",
      "output": "from vpython import *\nimport numpy as np\n\n# Constants\ng = 9.81\ntheta_0 = np.radians(5) # initial angular displacement\nLength_I = 10 # initial length of pendulum\nRadius_I = 1 # initial radius of ball\n\n# Pendulum setup\nscene = canvas()\nceiling = box(length=0.2, height=0.01, width=0.2, color=color.blue)\nball = sphere(radius=Radius_I, color=color.red)\nstring = cylinder(radius=0.005, color=color.yellow)\nball.m = 1 # mass of ball\n\ndef set_length(new_length):\n    global Length_I\n    Length_I = new_length\n    string.length = Length_I\n    ball.pos = vector(0, -Length_I, 0)\n\ndef set_radius(new_radius):\n    global Radius_I\n    Radius_I = new_radius\n    ball.radius = Radius_I\n\n# Initial conditions\nset_length(Length_I)\nset_radius(Radius_I)\ntheta = theta_0\nomega = 0\ndt = 0.01\n\n# Time evolution\nwhile True:\n    rate(100)\n    alpha = -(g/Length_I)*sin(theta) # angular acceleration\n    theta = theta + omega*dt\n    omega = omega + alpha*dt\n    ball.pos = vector(Length_I*sin(theta), -Length_I*cos(theta), 0)\n    string.axis = ball.pos",
      "mode": "initial"
    }
  ]
}