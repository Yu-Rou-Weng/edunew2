{
  "session_id": 3,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-07 12:56:31",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and angular acceleration $\\alpha$ have opposite directions, the relationship between them is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. Ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. Simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input managable variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
      "output": "from vpython import *\n# create scene\nscene = canvas(title='Simple Pendulum')\n\n# constants\ng = 9.81 \ntheta_0 = radians(5)\n\n# variables\nLength_I = 10\nRadius_I = 1\n\n# pendulum\nrod = cylinder(pos=vector(0,0,0), axis=vector(0,-Length_I,0), radius=0.01)\nball = sphere(pos=vector(0,-Length_I,0), radius=Radius_I, color=color.yellow)\nball.mass = 1.0\nball.momentum = vector(0,0,0)\n\n# time parameters\nt = 0\ndt = 0.01\n\n# animate the pendulum swing\nwhile True:\n    rate(100) # 100 frames per second\n    # calculate the force on the pendulum\n    F = -ball.mass*g*norm(ball.pos)\n    # update momentum\n    ball.momentum = ball.momentum + F*dt\n    # update position\n    ball.pos = ball.pos + ball.momentum/ball.mass*dt\n    rod.axis = ball.pos\n    t = t + dt",
      "mode": "initial"
    }
  ]
}