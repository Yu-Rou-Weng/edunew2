{
  "session_id": 4,
  "interactions": [
    {
      "serial_number": 1,
      "timestamp": "2024-07-07 12:37:19",
      "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. Ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. Simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
      "output": "from vpython import sphere, vector, color, rate, canvas, arrow, cylinder\n\n# Constants\ng = 9.8\ntheta = 5*(3.14159/180) # Initial angle in radians\nLength_I = 10 # Length of the pendulum\nRadius_I = 1 # Radius of the ball\nomega = 0 # Initial angular velocity\ndt = 0.01 # Time step\n\n# Create the pendulum\nscene = canvas()\npivot = vector(0,0,0)\nbob = sphere(pos=vector(Length_I*theta, -Length_I, 0), radius=Radius_I, color=color.yellow)\nrod = cylinder(pos=pivot, axis=bob.pos-pivot, radius=0.1)\n\n# Animation loop\nwhile True:\n    rate(100)\n    alpha = -(g/Length_I)*theta # Angular acceleration\n    omega += alpha*dt # Update angular velocity\n    theta += omega*dt # Update angle\n    bob.pos = vector(Length_I*theta, -Length_I, 0) # Update position\n    rod.axis = bob.pos # Update rod's axis",
      "mode": "initial"
    }
  ]
}