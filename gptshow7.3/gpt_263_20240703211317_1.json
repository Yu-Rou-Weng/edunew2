{
  "session_id": 1,
  "serial_number": 1,
  "timestamp": "2024-07-03T13:13:17.817Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Import time packages to your code.",
  "output": "from vpython import *\nimport time\n\n# Set the length and radius of the pendulum\nLength_I = 10\nRadius_I = 1\n\n# Create the pendulum\nceiling = box(length=0.2, height=0.2, width=0.2, color=color.blue)\nball = sphere(pos=vector(Length_I, 0, 0), radius=Radius_I, color=color.red)\nstick = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01)\n\n# Set the initial conditions\nball.velocity = vector(0, 0, 0)\nball.mass = 1.0\nball.force = vector(0, 0, 0)\nball.ang_velocity = 0\nball.ang_acceleration = 0\n\n# Set the simulation parameters\ng = 9.8\ndt = 0.01\nt = 0\n\nwhile True:\n    rate(100)\n\n    # Calculate the force on the ball\n    ball.force = -1 * ball.mass * g * vector(sin(ball.pos.x/Length_I), 0, 0)\n    \n    # Update the ball's acceleration\n    ball.ang_acceleration = ball.force.x / (ball.mass * Length_I)\n    \n    # Update the ball's velocity\n    ball.ang_velocity += ball.ang_acceleration * dt\n    \n    # Update the ball's position\n    ball.pos = vector(Length_I * cos(ball.ang_velocity * t), 0, 0)\n    \n    # Update the stick's position\n    stick.axis = ball.pos - ceiling.pos\n    \n    # Update the time\n    t += dt"
}