{
  "session_id": 1,
  "serial_number": 20,
  "timestamp": "2024-07-03T13:33:54.380Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the directions of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThe following are two programs:\n\n1. An ideal simple pendulum, where changing the initial swing angle calculates the motion process and the period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Import time packages to your code.",
  "output": "from vpython import *\nimport time\n\n# Cyber input variables\nLength_I = 10\nRadius_I = 1\n\n# Parameters\ng = 9.8\ntheta = 0.2\n\n# Objects\npivot = vector(0,0,0)\nball = sphere(pos=vector(Length_I*sin(theta), -Length_I*cos(theta), 0), radius=Radius_I, color=color.cyan)\nrod = cylinder(pos=pivot, axis=ball.pos-pivot, radius=0.01, color=color.yellow)\n\n# Ball velocity\nball.v = vector(0,0,0)\n\n# Time step\ndt = 0.01\n\nwhile True:\n    rate(100)\n    # Acceleration\n    a = vector(0,-g,0) - (g/Length_I)*mag(ball.pos-pivot)*norm(ball.pos-pivot)\n    # Update velocity\n    ball.v = ball.v + a*dt\n    # Update position\n    ball.pos = ball.pos + ball.v*dt\n    # Update rod\n    rod.axis = ball.pos - pivot\n    time.sleep(dt)"
}