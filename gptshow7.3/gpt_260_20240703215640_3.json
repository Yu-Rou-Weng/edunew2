{
  "session_id": 3,
  "serial_number": 1,
  "timestamp": "2024-07-03T13:56:41.384Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs as follows:\n\n1. Ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. Simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\n# Initial settings\nLength_I = 10\nRadius_I = 1\n\nscene = canvas(width = 800, height = 800, center = vector(0, -Length_I/2, 0))\nroof = box(length = 10, height = 0.5, width = 10, pos = vector(0, Length_I/2, 0))\nball = sphere(radius = Radius_I, color = color.red)\nrod = cylinder(radius = 0.1, pos = roof.pos)\nball.pos = roof.pos + vector(0, -Length_I, 0)\n\n# Variables\ng = 9.8\ntheta = 179/180*pi\nT = 2*pi*sqrt(Length_I/g)\nacc = vec(0, 0, 0)\nv = vec(0, 0, 0)\ndt = 0.001\n\n# Animation\nwhile True:\n    rate(1000)\n    acc = -g*sin(theta)/Length_I*vector(0, -1, 0)\n    v += acc*dt\n    ball.pos += v*dt\n    rod.axis = ball.pos - roof.pos\n    theta = acos(dot(rod.axis, vec(0, -1, 0))/Length_I)"
}