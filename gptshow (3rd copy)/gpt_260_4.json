{
  "session_id": 4,
  "4_1_07_07_21_35_33": {
    "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the swing, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.(5) Do not import packages that are not supported by VPython such as numpy, math and time",
    "output": "from vpython import *\nscene = canvas(width=800, height=800, center=vec(0, -0.2, 0), background=vec(0.5, 0.5, 0))\ng = 9.8\nsize, mass = 1.0, 1.0\nL = 10.0\ntheta = 179.0/180*pi\nomega = 0.0\ndt = 0.001\nt = 0.0\nI = mass*L*L\ns = sphere(pos=vec(L*sin(theta), -L*cos(theta), 0), radius=size, color=color.red)\nrod = cylinder(pos=vec(0, 0, 0), axis=s.pos, radius=size/10.0, color=color.yellow)\nwhile True:\n    rate(1000)\n    alpha = -g*sin(theta)/L\n    omega += alpha*dt\n    theta += omega*dt\n    s.pos = vec(L*sin(theta), -L*cos(theta), 0)\n    rod.axis = s.pos\n    t += dt",
    "mode": "initial"
  }
}