{
  "timestamp": "2024-07-03T08:11:23.393Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, the relationship between them is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ represents the angular frequency of the swing, therefore the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, change the starting swing angle to calculate the motion process and period.\n2. A simple pendoodle considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "# VPython code for an ideal simple pendulum\nfrom vpython import *\n\n# Create a scene\nscene = canvas()\n\n# Define the parameters\ng = 9.8\nLength_I = 10\ntheta_0 = 5*pi/180\n\n# Create the pendulum\nball = sphere(pos=vector(Length_I*sin(theta_0), -Length_I*cos(theta_0), 0), radius=0.5, color=color.red)\nrod = cylinder(pos=vector(0,0,0), axis=ball.pos, radius=0.1)\n\n# Initialize the angular velocity and time\nomega = 0\nt = 0\ndt = 0.01\n\nwhile True:\n    rate(100)\n    # Calculate the angular acceleration\n    alpha = -g/Length_I * sin(ball.pos.y/Length_I)\n    # Update the angular velocity\n    omega += alpha*dt\n    # Update the position of the ball\n    ball.pos = vector(Length_I*sin(omega*t), -Length_I*cos(omega*t), 0)\n    # Update the rod\n    rod.axis = ball.pos\n    # Update the time\n    t += dt\n\n# VPython code for a simple pendulum considering air resistance\nfrom vpython import *\n\n# Create a scene\nscene = canvas()\n\n# Define the parameters\ng = 9.8\nLength_I = 10\ntheta_0 = 5*pi/180\nb = 0.1\n\n# Create the pendulum\nball = sphere(pos=vector(Length_I*sin(theta_0), -Length_I*cos(theta_0), 0), radius=0.5, color=color.red)\nrod = cylinder(pos=vector(0,0,0), axis=ball.pos, radius=0.1)\n\n# Initialize the angular velocity and time\nomega = 0\nt = 0\ndt = 0.01\n\nwhile True:\n    rate(100)\n    # Calculate the angular acceleration\n    alpha = -g/Length_I * sin(ball.pos.y/Length_I) - b*omega\n    # Update the angular velocity\n    omega += alpha*dt\n    # Update the position of the ball\n    ball.pos = vector(Length_I*sin(omega*t), -Length_I*cos(omega*t), 0)\n    # Update the rod\n    rod.axis = ball.pos\n    # Update the time\n    t += dt"
}