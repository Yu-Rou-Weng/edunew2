{
  "timestamp": "2024-07-03T07:52:34.873Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\nLength_I = 10 # cyber input variable\n\n# defining parameters\ng = 9.8\ntheta = 5*pi/180\nomega = 0\ndt = 0.001\nt = 0\nb = 0.05 # air resistance\n\n# creating pendulum\nceiling = box(pos=vector(0,0,0), length=0.2, height=0.01, width=0.2, color=color.blue)\nball = sphere(pos=vector(Length_I*sin(theta), -Length_I*cos(theta), 0), radius=1, color=color.red)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos-ceiling.pos, radius=0.01)\n\n# animation\nwhile True:\n    rate(1000)\n    alpha = -g*sin(theta)/Length_I - b*omega\n    theta = theta + omega*dt\n    omega = omega + alpha*dt\n    ball.pos = vector(Length_I*sin(theta), -Length_I*cos(theta), 0)\n    rod.axis = ball.pos\n    t = t + dt"
}