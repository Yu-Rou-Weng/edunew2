{
  "timestamp": "2024-07-03T08:43:06.753Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship can be expressed as:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nBelow are two programs:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\n# Define initial parameters\nLength_I = 10\ng = 9.8\ntheta_0 = radians(5)\n\n# Create pendulum\npendulum = sphere(pos=vector(Length_I*sin(theta_0), -Length_I*cos(theta_0), 0), radius=1)\npivot = vector(0, 0, 0)\nrod = cylinder(pos=pivot, axis=pendulum.pos-pivot, radius=0.1)\n\n# Initialize variables for time and angular velocity\nt = 0\ndt = 0.01\nomega = 0\n\n# Animation loop\nwhile True:\n    rate(100)\n    # Calculate new position\n    theta = theta_0*cos(sqrt(g/Length_I)*t)\n    pendulum.pos = vector(Length_I*sin(theta), -Length_I*cos(theta), 0)\n    rod.axis = pendulum.pos\n    # Update time\n    t += dt"
}