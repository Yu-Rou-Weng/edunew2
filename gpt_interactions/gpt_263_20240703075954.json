{
  "timestamp": "2024-07-03T07:59:54.966Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ and angular acceleration $\\alpha$ are opposite, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve for:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the oscillation, therefore the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\nscene = canvas(width=800, height=800, center=vec(0,-0.2,0), background=vec(0.5,0.5,0))\n\nLength_I = 10 # length of pendulum\ng = 9.8 # gravitational acceleration\ntheta_0 = 0.05 # initial swing angle\nomega = sqrt(g/Length_I) # angular frequency\nT = 2*pi/omega # period\n\npendulum = sphere(pos=vec(Length_I*sin(theta_0), -Length_I*cos(theta_0), 0), radius=0.2, color=color.blue)\nroof = box(pos=vec(0,0,0), length=0.2, height=0.01, width=0.2, color=color.red)\n\nrod = cylinder(pos=roof.pos, axis=pendulum.pos-roof.pos, radius=0.01)\n\nt = 0\ndt = 0.001\nwhile True:\n    rate(1000)\n    theta = theta_0 * cos(omega * t)\n    pendulum.pos = vec(Length_I*sin(theta), -Length_I*cos(theta), 0)\n    rod.axis = pendulum.pos - roof.pos\n    t += dt"
}