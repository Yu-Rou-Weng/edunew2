{
  "timestamp": "2024-07-03T08:36:11.382Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the directions of the torque $\\tau$ and the angular acceleration $\\alpha$ are opposite, the relationship between them can be expressed as:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the swing, hence the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n(2) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\nLength_I = 10 # length of the pendulum\n\n# Initialize parameters\ng = 9.8\ntheta = 0.2 # initial swing angle\nL = Length_I\ndt = 0.01\nt = 0\nT = 2 * pi * sqrt(L / g) # period of pendulum motion\n\n# Create pendulum\nceiling = box(length=0.2, height=0.2, width=0.2, color=color.blue)\nbob = sphere(radius=0.05, color=color.red)\nrod = cylinder(radius=0.01, color=color.yellow)\nbob.pos = vector(L*sin(theta), -L*cos(theta), 0)\nrod.axis = bob.pos - ceiling.pos\n\n# Animation\nwhile True:\n    rate(100)\n    theta = 0.2 * cos(sqrt(g / L) * t)\n    bob.pos = vector(L*sin(theta), -L*cos(theta), 0)\n    rod.axis = bob.pos - ceiling.pos\n    t = t + dt"
}