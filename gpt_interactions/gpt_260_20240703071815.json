{
  "timestamp": "2024-07-03T07:18:16.570Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the direction of torque $\\tau$ is opposite to that of angular acceleration $\\alpha$, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the above formula, $\\omega$ is the angular frequency of the oscillation, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nHere are two programs:\n\n1. An ideal simple pendulum, where the starting angle is changed to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n1. Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10\n2. Define and initialize a variable named Radius_I as a cyber input to variable, set Radius_I=1\n3. Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n4. Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(1) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\n# define constants\ng = 9.8\ntheta = 0.05\n\n# initialize variables\nLength_I = 10\nRadius_I = 1\n\n# create objects\nroof = box(length=0.2, height=0.01, width=0.2, pos=vector(0, 0, 0))\nball = sphere(radius=Radius_I, pos=vector(Length_I * sin(theta), -Length_I * cos(theta), 0))\nrod = cylinder(radius=0.01, pos=roof.pos, axis=ball.pos - roof.pos)\n\n# initialize motion parameters\nball.v = vector(0, 0, 0)\nomega = sqrt(g / Length_I)\nT = 2 * pi / omega\n\n# time parameters\nt = 0\ndt = 0.01\n\n# animation loop\nwhile True:\n    rate(100)\n    theta = theta * cos(omega * t)\n    ball.pos = vector(Length_I * sin(theta), -Length_I * cos(theta), 0)\n    rod.axis = ball.pos - roof.pos\n    t += dt"
}