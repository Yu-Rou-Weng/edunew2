{
  "timestamp": "2024-07-03T02:16:22.670Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and the angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, and when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can solve:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the swing, thus the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. An ideal simple pendulum, change the initial swing angle to calculate the motion process and period.\n2. A simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Length_I as a cyber input variable, set Length_I=10.\n(2) Define and initialize a variable named Radius_I as a cyber input variable, set Radius_I=1.\n(3) Length_I is the length of the pendulum. When Length_I changes to a new value, the length of the pendulum also changes to that value.\n(4) Radius_I is the radius of the ball. When Radius_I changes to a new value, the radius of the ball also changes to that value.\n(5) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "from vpython import *\n\n# Constants\ng = 9.8  # acceleration due to gravity\nLength_I = 10  # length of the pendulum\nRadius_I = 1  # radius of the ball\ntheta = 0.1  # initial swing angle\nomega = 0  # initial angular velocity\n\n# Create 3D objects\nceiling = box(pos=vector(0, 0, 0), size=vector(0.2, 0.01, 0.2), color=color.blue)\nball = sphere(pos=vector(Length_I * sin(theta), -Length_I * cos(theta), 0), radius=Radius_I, color=color.red)\nrod = cylinder(pos=ceiling.pos, axis=ball.pos - ceiling.pos, radius=0.01, color=color.yellow)\n\n# Time settings\nt = 0\ndt = 0.01\n\n# Animation loop\nwhile True:\n    rate(100)  # limit the number of loops per second\n\n    # Calculate the new position of the ball\n    alpha = -g / Length_I * sin(theta)  # angular acceleration\n    omega += alpha * dt  # update angular velocity\n    theta += omega * dt  # update swing angle\n\n    ball.pos = vector(Length_I * sin(theta), -Length_I * cos(theta), 0)  # update position of the ball\n    rod.axis = ball.pos - ceiling.pos  # update the rod position\n\n    t += dt  # update time"
}