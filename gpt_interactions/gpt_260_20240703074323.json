{
  "timestamp": "2024-07-03T07:43:24.410Z",
  "mode": "initial",
  "input": "Simple Pendulum\n\nIf we define the moment of inertia (I) as:\n\n$$\nI = mr^2\n$$\n\nSince the torque $\\tau$ and the angular acceleration $\\alpha$ are in opposite directions, their relationship is:\n\n$$\n\\tau = -I\\alpha \\Rightarrow rF\\sin\\theta = -mr^2 \\frac{d^2\\theta}{dt^2} \\Rightarrow \\frac{F}{m}r\\sin\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nIf $r = L$ and $F = mg$, when $\\theta < 5^\\circ$, $\\sin \\theta \\approx \\theta$, then the equation can be rewritten as:\n\n$$\n\\frac{g}{L}\\theta = -\\frac{d^2\\theta}{dt^2}\n$$\n\nFrom this, we can derive:\n\n$$\n\\theta(t) = \\theta_0 \\cos\\left(\\sqrt{\\frac{g}{L}} t\\right) = \\theta_0 \\cos(\\omega t)\n$$\n\nIn the formula above, $\\omega$ is the angular frequency of the oscillation, therefore the period is:\n\n$$\nT = \\frac{2\\pi}{\\omega} = 2\\pi \\sqrt{\\frac{L}{g}}\n$$\n\nThere are two programs below:\n\n1. Ideal simple pendulum, changing the initial swing angle to calculate the motion process and period.\n2. Simple pendulum considering air resistance.\n\nCyber Input Variable Mapping Information:\n\n(1) Define and initialize a variable named Speed_I as a cyber input variable, set Speed_I=0.1\n(2) Speed_I is the speed of the pendulum. When Speed_I changes to a new value, the speed of the pendulum also changes to that value.\n(3) Do not import packages that are not supported by VPython, such as np, math, and time.",
  "output": "```Python\nfrom vpython import *\n\n# constants\ng = 9.81  # m/s^2\nL = 1  # m, length of pendulum\ntheta0 = 5 * pi / 180  # rad, initial swing angle\ndt = 0.001  # s, time step size\n\n# Cyber Input Variable Mapping Information\nSpeed_I = 0.1  # initial speed\n\n# create objects\nceiling = box(pos=vector(0, 0, 0), size=vector(1, 0.01, 0.1), color=color.blue)\nball = sphere(pos=vector(L * sin(theta0), -L * cos(theta0), 0), radius=0.05, color=color.red)\nstring = cylinder(pos=ceiling.pos, axis=ball.pos - ceiling.pos, radius=0.01)\n\n# initial values\ntheta = theta0\nomega = Speed_I\n\n# time evolution\nwhile True:\n    rate(1000)\n    alpha = -g / L * sin(theta)\n    omega += alpha * dt\n    theta += omega * dt\n    ball.pos = vector(L * sin(theta), -L * cos(theta), 0)\n    string.axis = ball.pos - ceiling.pos\n```"
}